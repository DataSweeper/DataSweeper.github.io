{"version":3,"sources":["dummy/tests/acceptance/authentication-test.js","dummy/tests/acceptance/authentication-test.jscs-test.js","dummy/tests/acceptance/authentication-test.jshint.js","dummy/tests/adapters/application.jscs-test.js","dummy/tests/adapters/application.jshint.js","dummy/tests/app.jscs-test.js","dummy/tests/app.jshint.js","dummy/tests/authenticators/oauth2.jscs-test.js","dummy/tests/authenticators/oauth2.jshint.js","dummy/tests/authenticators/torii.jscs-test.js","dummy/tests/authenticators/torii.jshint.js","dummy/tests/authorizers/application.jscs-test.js","dummy/tests/authorizers/application.jshint.js","dummy/tests/components/login-form.jscs-test.js","dummy/tests/components/login-form.jshint.js","dummy/tests/components/main-navigation.jscs-test.js","dummy/tests/components/main-navigation.jshint.js","dummy/tests/controllers/application.jscs-test.js","dummy/tests/controllers/application.jshint.js","dummy/tests/helpers/destroy-app.js","dummy/tests/helpers/destroy-app.jscs-test.js","dummy/tests/helpers/destroy-app.jshint.js","dummy/tests/helpers/ember-simple-auth.js","dummy/tests/helpers/fake-cookie-service.js","dummy/tests/helpers/fake-cookie-service.jscs-test.js","dummy/tests/helpers/fake-cookie-service.jshint.js","dummy/tests/helpers/module-for-acceptance.js","dummy/tests/helpers/module-for-acceptance.jscs-test.js","dummy/tests/helpers/module-for-acceptance.jshint.js","dummy/tests/helpers/resolver.js","dummy/tests/helpers/resolver.jscs-test.js","dummy/tests/helpers/resolver.jshint.js","dummy/tests/helpers/start-app.js","dummy/tests/helpers/start-app.jscs-test.js","dummy/tests/helpers/start-app.jshint.js","dummy/tests/helpers/torii.js","dummy/tests/models/account.jscs-test.js","dummy/tests/models/account.jshint.js","dummy/tests/models/post.jscs-test.js","dummy/tests/models/post.jshint.js","dummy/tests/resolver.jscs-test.js","dummy/tests/resolver.jshint.js","dummy/tests/router.jscs-test.js","dummy/tests/router.jshint.js","dummy/tests/routes/application.jscs-test.js","dummy/tests/routes/application.jshint.js","dummy/tests/routes/auth-error.jscs-test.js","dummy/tests/routes/auth-error.jshint.js","dummy/tests/routes/login.jscs-test.js","dummy/tests/routes/login.jshint.js","dummy/tests/routes/protected.jscs-test.js","dummy/tests/routes/protected.jshint.js","dummy/tests/services/session-account.jscs-test.js","dummy/tests/services/session-account.jshint.js","dummy/tests/session-stores/application.jscs-test.js","dummy/tests/session-stores/application.jshint.js","dummy/tests/test-helper.js","dummy/tests/test-helper.jscs-test.js","dummy/tests/test-helper.jshint.js","dummy/tests/torii-providers/facebook.jscs-test.js","dummy/tests/torii-providers/facebook.jshint.js","dummy/tests/unit/authenticators/base-test.js","dummy/tests/unit/authenticators/base-test.jscs-test.js","dummy/tests/unit/authenticators/base-test.jshint.js","dummy/tests/unit/authenticators/devise-test.js","dummy/tests/unit/authenticators/devise-test.jscs-test.js","dummy/tests/unit/authenticators/devise-test.jshint.js","dummy/tests/unit/authenticators/oauth2-password-grant-test.js","dummy/tests/unit/authenticators/oauth2-password-grant-test.jscs-test.js","dummy/tests/unit/authenticators/oauth2-password-grant-test.jshint.js","dummy/tests/unit/authenticators/test-test.js","dummy/tests/unit/authenticators/test-test.jscs-test.js","dummy/tests/unit/authenticators/test-test.jshint.js","dummy/tests/unit/authenticators/torii-test.js","dummy/tests/unit/authenticators/torii-test.jscs-test.js","dummy/tests/unit/authenticators/torii-test.jshint.js","dummy/tests/unit/authorizers/devise-test.js","dummy/tests/unit/authorizers/devise-test.jscs-test.js","dummy/tests/unit/authorizers/devise-test.jshint.js","dummy/tests/unit/authorizers/oauth2-bearer-test.js","dummy/tests/unit/authorizers/oauth2-bearer-test.jscs-test.js","dummy/tests/unit/authorizers/oauth2-bearer-test.jshint.js","dummy/tests/unit/configuration-test.js","dummy/tests/unit/configuration-test.jscs-test.js","dummy/tests/unit/configuration-test.jshint.js","dummy/tests/unit/initializers/setup-session-service-test.js","dummy/tests/unit/initializers/setup-session-service-test.jscs-test.js","dummy/tests/unit/initializers/setup-session-service-test.jshint.js","dummy/tests/unit/initializers/setup-session-test.js","dummy/tests/unit/initializers/setup-session-test.jscs-test.js","dummy/tests/unit/initializers/setup-session-test.jshint.js","dummy/tests/unit/instance-initializers/setup-session-restoration-test.js","dummy/tests/unit/instance-initializers/setup-session-restoration-test.jscs-test.js","dummy/tests/unit/instance-initializers/setup-session-restoration-test.jshint.js","dummy/tests/unit/internal-session-test.js","dummy/tests/unit/internal-session-test.jscs-test.js","dummy/tests/unit/internal-session-test.jshint.js","dummy/tests/unit/mixins/application-route-mixin-test.js","dummy/tests/unit/mixins/application-route-mixin-test.jscs-test.js","dummy/tests/unit/mixins/application-route-mixin-test.jshint.js","dummy/tests/unit/mixins/authenticated-route-mixin-test.js","dummy/tests/unit/mixins/authenticated-route-mixin-test.jscs-test.js","dummy/tests/unit/mixins/authenticated-route-mixin-test.jshint.js","dummy/tests/unit/mixins/data-adapter-mixin-test.js","dummy/tests/unit/mixins/data-adapter-mixin-test.jscs-test.js","dummy/tests/unit/mixins/data-adapter-mixin-test.jshint.js","dummy/tests/unit/mixins/unauthenticated-route-mixin-test.js","dummy/tests/unit/mixins/unauthenticated-route-mixin-test.jscs-test.js","dummy/tests/unit/mixins/unauthenticated-route-mixin-test.jshint.js","dummy/tests/unit/routes/application-test.js","dummy/tests/unit/routes/application-test.jscs-test.js","dummy/tests/unit/routes/application-test.jshint.js","dummy/tests/unit/routes/login-test.js","dummy/tests/unit/routes/login-test.jscs-test.js","dummy/tests/unit/routes/login-test.jshint.js","dummy/tests/unit/routes/protected-test.js","dummy/tests/unit/routes/protected-test.jscs-test.js","dummy/tests/unit/routes/protected-test.jshint.js","dummy/tests/unit/services/session-test.js","dummy/tests/unit/services/session-test.jscs-test.js","dummy/tests/unit/services/session-test.jshint.js","dummy/tests/unit/session-stores/adaptive-test.js","dummy/tests/unit/session-stores/adaptive-test.jscs-test.js","dummy/tests/unit/session-stores/adaptive-test.jshint.js","dummy/tests/unit/session-stores/cookie-test.js","dummy/tests/unit/session-stores/cookie-test.jscs-test.js","dummy/tests/unit/session-stores/cookie-test.jshint.js","dummy/tests/unit/session-stores/ephemeral-test.js","dummy/tests/unit/session-stores/ephemeral-test.jscs-test.js","dummy/tests/unit/session-stores/ephemeral-test.jshint.js","dummy/tests/unit/session-stores/local-storage-test.js","dummy/tests/unit/session-stores/local-storage-test.jscs-test.js","dummy/tests/unit/session-stores/local-storage-test.jshint.js","dummy/tests/unit/session-stores/shared/cookie-store-behavior.js","dummy/tests/unit/session-stores/shared/cookie-store-behavior.jscs-test.js","dummy/tests/unit/session-stores/shared/cookie-store-behavior.jshint.js","dummy/tests/unit/session-stores/shared/store-behavior.js","dummy/tests/unit/session-stores/shared/store-behavior.jscs-test.js","dummy/tests/unit/session-stores/shared/store-behavior.jshint.js","dummy/tests/unit/utils/objects-are-equal-test.js","dummy/tests/unit/utils/objects-are-equal-test.jscs-test.js","dummy/tests/unit/utils/objects-are-equal-test.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('dummy/tests/acceptance/authentication-test', ['exports', 'ember', 'mocha', 'chai', 'dummy/tests/helpers/start-app', 'pretender', 'dummy/tests/helpers/ember-simple-auth', 'dummy/tests/helpers/destroy-app', 'dummy/config/environment'], function (exports, _ember, _mocha, _chai, _dummyTestsHelpersStartApp, _pretender, _dummyTestsHelpersEmberSimpleAuth, _dummyTestsHelpersDestroyApp, _dummyConfigEnvironment) {\n\n  (0, _mocha.describe)('Acceptance: Authentication', function () {\n    var application = undefined;\n    var server = undefined;\n\n    (0, _mocha.beforeEach)(function () {\n      application = (0, _dummyTestsHelpersStartApp['default'])();\n    });\n\n    (0, _mocha.afterEach)(function () {\n      _ember['default'].tryInvoke(server, 'shutdown');\n      (0, _dummyTestsHelpersDestroyApp['default'])(application);\n    });\n\n    (0, _mocha.describe)('the protected route', function () {\n      (0, _mocha.it)('cannot be visited when the session is not authenticated', function () {\n        (0, _dummyTestsHelpersEmberSimpleAuth.invalidateSession)(application);\n        visit('/protected');\n\n        return andThen(function () {\n          (0, _chai.expect)(currentPath()).to.eq('login');\n        });\n      });\n\n      (0, _mocha.it)('can be visited when the session is authenticated', function () {\n        server = new _pretender['default'](function () {\n          this.get(_dummyConfigEnvironment['default'].apiHost + '/posts', function () {\n            return [200, { 'Content-Type': 'application/json' }, '{\"data\":[]}'];\n          });\n        });\n        (0, _dummyTestsHelpersEmberSimpleAuth.authenticateSession)(application, { userId: 1, otherData: 'some-data' });\n\n        visit('/protected');\n\n        return andThen(function () {\n          (0, _chai.expect)(currentPath()).to.eq('protected');\n          var session = (0, _dummyTestsHelpersEmberSimpleAuth.currentSession)(application);\n          (0, _chai.expect)(session.get('data.authenticated.userId')).to.eql(1);\n          (0, _chai.expect)(session.get('data.authenticated.otherData')).to.eql('some-data');\n        });\n      });\n    });\n\n    (0, _mocha.describe)('the login route', function () {\n      (0, _mocha.it)('can be visited when the session is not authenticated', function () {\n        (0, _dummyTestsHelpersEmberSimpleAuth.invalidateSession)(application);\n        visit('/login');\n\n        return andThen(function () {\n          (0, _chai.expect)(currentPath()).to.eq('login');\n        });\n      });\n\n      (0, _mocha.it)('cannot be visited when the session is authenticated', function () {\n        (0, _dummyTestsHelpersEmberSimpleAuth.authenticateSession)(application);\n        visit('/login');\n\n        return andThen(function () {\n          (0, _chai.expect)(currentPath()).to.eq('index');\n        });\n      });\n    });\n  });\n});\n/* jshint expr:true */","define('dummy/tests/acceptance/authentication-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - acceptance/authentication-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'acceptance/authentication-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/acceptance/authentication-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - acceptance/authentication-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'acceptance/authentication-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/adapters/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - adapters/application.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'adapters/application.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/adapters/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - adapters/application.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'adapters/application.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/app.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - app.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'app.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - app.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'app.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/authenticators/oauth2.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - authenticators/oauth2.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'authenticators/oauth2.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/authenticators/oauth2.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - authenticators/oauth2.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'authenticators/oauth2.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/authenticators/torii.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - authenticators/torii.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'authenticators/torii.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/authenticators/torii.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - authenticators/torii.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'authenticators/torii.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/authorizers/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - authorizers/application.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'authorizers/application.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/authorizers/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - authorizers/application.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'authorizers/application.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/components/login-form.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - components/login-form.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'components/login-form.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/components/login-form.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - components/login-form.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'components/login-form.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/components/main-navigation.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - components/main-navigation.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'components/main-navigation.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/components/main-navigation.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - components/main-navigation.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'components/main-navigation.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/controllers/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - controllers/application.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'controllers/application.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/controllers/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - controllers/application.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'controllers/application.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('dummy/tests/helpers/destroy-app.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - helpers/destroy-app.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'helpers/destroy-app.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - helpers/destroy-app.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'helpers/destroy-app.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/helpers/ember-simple-auth', ['exports', 'ember-simple-auth/authenticators/test'], function (exports, _emberSimpleAuthAuthenticatorsTest) {\n  exports.authenticateSession = authenticateSession;\n  exports.currentSession = currentSession;\n  exports.invalidateSession = invalidateSession;\n\n  var TEST_CONTAINER_KEY = 'authenticator:test';\n\n  function ensureAuthenticator(app, container) {\n    var authenticator = container.lookup(TEST_CONTAINER_KEY);\n    if (!authenticator) {\n      app.register(TEST_CONTAINER_KEY, _emberSimpleAuthAuthenticatorsTest['default']);\n    }\n  }\n\n  function authenticateSession(app, sessionData) {\n    var container = app.__container__;\n\n    var session = container.lookup('service:session');\n    ensureAuthenticator(app, container);\n    session.authenticate(TEST_CONTAINER_KEY, sessionData);\n    return wait();\n  }\n\n  ;\n\n  function currentSession(app) {\n    return app.__container__.lookup('service:session');\n  }\n\n  ;\n\n  function invalidateSession(app) {\n    var session = app.__container__.lookup('service:session');\n    if (session.get('isAuthenticated')) {\n      session.invalidate();\n    }\n    return wait();\n  }\n\n  ;\n});","define('dummy/tests/helpers/fake-cookie-service', ['exports', 'ember'], function (exports, _ember) {\n  var isNone = _ember['default'].isNone;\n  exports['default'] = _ember['default'].Object.extend({\n    init: function init() {\n      this._super.apply(this, arguments);\n\n      this._content = {};\n    },\n\n    read: function read(name) {\n      var value = this._content[name];\n\n      if (isNone(value)) {\n        return value;\n      } else {\n        return decodeURIComponent(value);\n      }\n    },\n\n    write: function write(name, value) {\n      if (isNone(value)) {\n        delete this._content[name];\n      } else {\n        this._content[name] = encodeURIComponent(value);\n      }\n    }\n  });\n});","define('dummy/tests/helpers/fake-cookie-service.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - helpers/fake-cookie-service.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'helpers/fake-cookie-service.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/helpers/fake-cookie-service.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - helpers/fake-cookie-service.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'helpers/fake-cookie-service.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'dummy/tests/helpers/start-app', 'dummy/tests/helpers/destroy-app'], function (exports, _qunit, _dummyTestsHelpersStartApp, _dummyTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _dummyTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          // jscs:disable requireSpread\n          options.beforeEach.apply(this, arguments);\n          // jscs:enable requireSpread\n        }\n      },\n\n      afterEach: function afterEach() {\n        if (options.afterEach) {\n          // jscs:disable requireSpread\n          options.afterEach.apply(this, arguments);\n          // jscs:enable requireSpread\n        }\n\n        (0, _dummyTestsHelpersDestroyApp['default'])(this.application);\n      }\n    });\n  };\n});","define('dummy/tests/helpers/module-for-acceptance.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - helpers/module-for-acceptance.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'helpers/module-for-acceptance.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - helpers/module-for-acceptance.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'helpers/module-for-acceptance.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/helpers/resolver', ['exports', 'dummy/resolver', 'dummy/config/environment'], function (exports, _dummyResolver, _dummyConfigEnvironment) {\n\n  var resolver = _dummyResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _dummyConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _dummyConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('dummy/tests/helpers/resolver.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - helpers/resolver.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'helpers/resolver.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - helpers/resolver.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'helpers/resolver.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/helpers/start-app', ['exports', 'ember', 'dummy/app', 'dummy/config/environment'], function (exports, _ember, _dummyApp, _dummyConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _dummyConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _dummyApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('dummy/tests/helpers/start-app.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - helpers/start-app.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'helpers/start-app.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - helpers/start-app.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'helpers/start-app.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/helpers/torii', ['exports'], function (exports) {\n  exports.stubValidSession = stubValidSession;\n\n  function stubValidSession(application, sessionData) {\n    var session = application.__container__.lookup('service:session');\n    var sm = session.get('stateMachine');\n    Ember.run(function () {\n      sm.send('startOpen');\n      sm.send('finishOpen', sessionData);\n    });\n  }\n});","define('dummy/tests/models/account.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - models/account.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'models/account.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/models/account.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - models/account.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'models/account.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/models/post.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - models/post.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'models/post.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/models/post.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - models/post.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'models/post.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/resolver.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - resolver.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'resolver.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - resolver.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'resolver.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/router.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - router.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'router.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - router.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'router.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/routes/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - routes/application.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'routes/application.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/routes/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - routes/application.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'routes/application.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/routes/auth-error.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - routes/auth-error.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'routes/auth-error.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/routes/auth-error.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - routes/auth-error.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'routes/auth-error.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/routes/login.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - routes/login.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'routes/login.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/routes/login.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - routes/login.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'routes/login.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/routes/protected.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - routes/protected.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'routes/protected.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/routes/protected.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - routes/protected.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'routes/protected.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/services/session-account.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - services/session-account.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'services/session-account.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/services/session-account.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - services/session-account.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'services/session-account.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/session-stores/application.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - session-stores/application.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'session-stores/application.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/session-stores/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - session-stores/application.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'session-stores/application.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/test-helper', ['exports', 'npm:sinon-chai', 'chai', 'dummy/tests/helpers/resolver', 'ember-mocha'], function (exports, _npmSinonChai, _chai, _dummyTestsHelpersResolver, _emberMocha) {\n\n  (0, _emberMocha.setResolver)(_dummyTestsHelpersResolver['default']);\n\n  _chai['default'].use(_npmSinonChai['default']);\n});","define('dummy/tests/test-helper.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - test-helper.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'test-helper.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - test-helper.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'test-helper.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/torii-providers/facebook.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - torii-providers/facebook.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'torii-providers/facebook.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/torii-providers/facebook.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - torii-providers/facebook.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'torii-providers/facebook.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/authenticators/base-test', ['exports', 'ember-mocha', 'mocha', 'chai', 'ember-simple-auth/authenticators/base'], function (exports, _emberMocha, _mocha, _chai, _emberSimpleAuthAuthenticatorsBase) {\n\n  (0, _mocha.describe)('BaseAuthenticator', function () {\n    var authenticator = undefined;\n\n    (0, _mocha.beforeEach)(function () {\n      authenticator = _emberSimpleAuthAuthenticatorsBase['default'].create();\n    });\n\n    (0, _mocha.describe)('#restore', function () {\n      (0, _emberMocha.it)('returns a rejecting promise', function (done) {\n        authenticator.restore()['catch'](function () {\n          (0, _chai.expect)(true).to.be['true'];\n          done();\n        });\n      });\n    });\n\n    (0, _mocha.describe)('#authenticate', function () {\n      (0, _emberMocha.it)('returns a rejecting promise', function (done) {\n        authenticator.authenticate()['catch'](function () {\n          (0, _chai.expect)(true).to.be['true'];\n          done();\n        });\n      });\n    });\n\n    (0, _mocha.describe)('#invalidate', function () {\n      (0, _emberMocha.it)('returns a resolving promise', function (done) {\n        authenticator.invalidate().then(function () {\n          (0, _chai.expect)(true).to.be['true'];\n          done();\n        });\n      });\n    });\n  });\n});\n/* jshint expr:true */","define('dummy/tests/unit/authenticators/base-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/authenticators/base-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/authenticators/base-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/authenticators/base-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/authenticators/base-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/authenticators/base-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/authenticators/devise-test', ['exports', 'ember', 'ember-mocha', 'mocha', 'chai', 'sinon', 'ember-simple-auth/authenticators/devise'], function (exports, _ember, _emberMocha, _mocha, _chai, _sinon, _emberSimpleAuthAuthenticatorsDevise) {\n  var _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\n  (0, _mocha.describe)('DeviseAuthenticator', function () {\n    var xhr = undefined;\n    var server = undefined;\n    var authenticator = undefined;\n\n    (0, _mocha.beforeEach)(function () {\n      xhr = _sinon['default'].useFakeXMLHttpRequest();\n      server = _sinon['default'].fakeServer.create();\n      server.autoRespond = true;\n      authenticator = _emberSimpleAuthAuthenticatorsDevise['default'].create();\n    });\n\n    (0, _mocha.afterEach)(function () {\n      xhr.restore();\n    });\n\n    (0, _mocha.describe)('#restore', function () {\n      (0, _mocha.beforeEach)(function () {\n        server.respondWith('POST', '/users/sign_in', [201, { 'Content-Type': 'application/json' }, '{ \"user_token\": \"secret token!\" }']);\n      });\n\n      (0, _mocha.describe)('when the data contains a token and email', function () {\n        (0, _emberMocha.it)('resolves with the correct data', function (done) {\n          authenticator.restore({ token: 'secret token!', email: 'user@email.com' }).then(function (content) {\n            (0, _chai.expect)(content).to.eql({ token: 'secret token!', email: 'user@email.com' });\n            done();\n          });\n        });\n      });\n\n      (0, _mocha.describe)('when the data contains a custom token and email attribute', function () {\n        (0, _mocha.beforeEach)(function () {\n          authenticator = _emberSimpleAuthAuthenticatorsDevise['default'].extend({ tokenAttributeName: 'employee.token', identificationAttributeName: 'employee.email' }).create();\n        });\n\n        (0, _emberMocha.it)('resolves with the correct data', function (done) {\n          authenticator.restore({ employee: { token: 'secret token!', email: 'user@email.com' } }).then(function (content) {\n            (0, _chai.expect)(content).to.eql({ employee: { token: 'secret token!', email: 'user@email.com' } });\n            done();\n          });\n        });\n      });\n    });\n\n    (0, _mocha.describe)('#authenticate', function () {\n      (0, _mocha.beforeEach)(function () {\n        _sinon['default'].spy(_ember['default'].$, 'ajax');\n      });\n\n      (0, _mocha.afterEach)(function () {\n        _ember['default'].$.ajax.restore();\n      });\n\n      (0, _emberMocha.it)('sends an AJAX request to the sign in endpoint', function (done) {\n        authenticator.authenticate('identification', 'password');\n\n        _ember['default'].run.next(function () {\n          var _Ember$$$ajax$getCall$args = _slicedToArray(_ember['default'].$.ajax.getCall(0).args, 1);\n\n          var args = _Ember$$$ajax$getCall$args[0];\n\n          delete args.beforeSend;\n          (0, _chai.expect)(args).to.eql({\n            url: '/users/sign_in',\n            type: 'POST',\n            data: { user: { email: 'identification', password: 'password' } },\n            dataType: 'json'\n          });\n          done();\n        });\n      });\n\n      (0, _mocha.describe)('when the authentication request is successful', function () {\n        (0, _mocha.beforeEach)(function () {\n          server.respondWith('POST', '/users/sign_in', [201, { 'Content-Type': 'application/json' }, '{ \"access_token\": \"secret token!\" }']);\n        });\n\n        (0, _emberMocha.it)('resolves with the correct data', function (done) {\n          authenticator.authenticate('email@address.com', 'password').then(function (data) {\n            (0, _chai.expect)(true).to.be['true'];\n            (0, _chai.expect)(data).to.eql({ 'access_token': 'secret token!' });\n            done();\n          });\n        });\n      });\n\n      (0, _mocha.describe)('when the authentication request fails', function () {\n        (0, _mocha.beforeEach)(function () {\n          server.respondWith('POST', '/users/sign_in', [400, { 'Content-Type': 'application/json' }, '{ \"error\": \"invalid_grant\" }']);\n        });\n\n        (0, _emberMocha.it)('rejects with the correct error', function (done) {\n          authenticator.authenticate('email@address.com', 'password')['catch'](function (error) {\n            (0, _chai.expect)(error).to.eql({ error: 'invalid_grant' });\n            done();\n          });\n        });\n      });\n\n      (0, _emberMocha.it)('can customize the ajax request', function (done) {\n        authenticator = _emberSimpleAuthAuthenticatorsDevise['default'].extend({\n          makeRequest: function makeRequest(config) {\n            return this._super(config, { contentType: 'application/json' });\n          }\n        }).create();\n        authenticator.authenticate('identification', 'password');\n        _ember['default'].run.next(function () {\n          var _Ember$$$ajax$getCall$args2 = _slicedToArray(_ember['default'].$.ajax.getCall(0).args, 1);\n\n          var args = _Ember$$$ajax$getCall$args2[0];\n\n          (0, _chai.expect)(args.contentType).to.eql('application/json');\n          done();\n        });\n      });\n    });\n\n    (0, _mocha.describe)('#invalidate', function () {\n      (0, _emberMocha.it)('returns a resolving promise', function (done) {\n        authenticator.invalidate().then(function () {\n          (0, _chai.expect)(true).to.be['true'];\n          done();\n        });\n      });\n    });\n  });\n});\n/* jshint expr:true */","define('dummy/tests/unit/authenticators/devise-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/authenticators/devise-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/authenticators/devise-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/authenticators/devise-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/authenticators/devise-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/authenticators/devise-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/authenticators/oauth2-password-grant-test', ['exports', 'ember', 'ember-mocha', 'mocha', 'chai', 'sinon', 'ember-simple-auth/authenticators/oauth2-password-grant'], function (exports, _ember, _emberMocha, _mocha, _chai, _sinon, _emberSimpleAuthAuthenticatorsOauth2PasswordGrant) {\n\n  (0, _mocha.describe)('OAuth2PasswordGrantAuthenticator', function () {\n    var authenticator = undefined;\n    var xhr = undefined;\n    var server = undefined;\n\n    (0, _mocha.beforeEach)(function () {\n      authenticator = _emberSimpleAuthAuthenticatorsOauth2PasswordGrant['default'].create();\n      xhr = _sinon['default'].useFakeXMLHttpRequest();\n      server = _sinon['default'].fakeServer.create();\n      server.autoRespond = true;\n      _sinon['default'].spy(_ember['default'].$, 'ajax');\n    });\n\n    (0, _mocha.afterEach)(function () {\n      xhr.restore();\n      _ember['default'].$.ajax.restore();\n    });\n\n    (0, _mocha.describe)('#restore', function () {\n      (0, _mocha.describe)('when the data includes expiration data', function () {\n        (0, _emberMocha.it)('resolves with the correct data', function (done) {\n          authenticator.restore({ 'access_token': 'secret token!', 'expires_in': 12345, 'refresh_token': 'refresh token!' }).then(function (data) {\n            (0, _chai.expect)(data).to.eql({ 'access_token': 'secret token!', 'expires_in': 12345, 'refresh_token': 'refresh token!' });\n            done();\n          });\n        });\n\n        (0, _mocha.describe)('when the data includes an expiration time in the past', function () {\n          (0, _mocha.describe)('when automatic token refreshing is enabled', function () {\n            (0, _mocha.describe)('when the refresh request is successful', function () {\n              (0, _mocha.beforeEach)(function () {\n                server.respondWith('POST', '/token', [200, { 'Content-Type': 'application/json' }, '{ \"access_token\": \"secret token 2!\", \"expires_in\": 67890, \"refresh_token\": \"refresh token 2!\" }']);\n              });\n\n              (0, _emberMocha.it)('resolves with the correct data', function (done) {\n                authenticator.restore({ 'access_token': 'secret token!', 'expires_at': 1 }).then(function (data) {\n                  (0, _chai.expect)(data['expires_at']).to.be.greaterThan(new Date().getTime());\n                  delete data['expires_at'];\n                  (0, _chai.expect)(data).to.eql({ 'access_token': 'secret token 2!', 'expires_in': 67890, 'refresh_token': 'refresh token 2!' });\n                  done();\n                });\n              });\n            });\n\n            (0, _mocha.describe)('when the access token is not refreshed successfully', function () {\n              (0, _emberMocha.it)('returns a rejecting promise', function (done) {\n                authenticator.restore({ 'access_token': 'secret token!', 'expires_at': 1 })['catch'](function () {\n                  (0, _chai.expect)(true).to.be['true'];\n                  done();\n                });\n              });\n            });\n          });\n\n          (0, _mocha.describe)('when automatic token refreshing is disabled', function () {\n            (0, _mocha.beforeEach)(function () {\n              authenticator.set('refreshAccessTokens', false);\n            });\n\n            (0, _emberMocha.it)('returns a rejecting promise', function (done) {\n              authenticator.restore({ 'access_token': 'secret token!', 'expires_at': 1 })['catch'](function () {\n                (0, _chai.expect)(true).to.be['true'];\n                done();\n              });\n            });\n          });\n        });\n      });\n\n      (0, _mocha.describe)('when the data does not include expiration data', function () {\n        (0, _mocha.describe)('when the data contains an access_token', function () {\n          (0, _emberMocha.it)('resolves with the correct data', function (done) {\n            authenticator.restore({ 'access_token': 'secret token!' }).then(function (data) {\n              (0, _chai.expect)(data).to.eql({ 'access_token': 'secret token!' });\n              done();\n            });\n          });\n        });\n\n        (0, _mocha.describe)('when the data does not contain an access_token', function () {\n          (0, _emberMocha.it)('returns a rejecting promise', function (done) {\n            authenticator.restore()['catch'](function () {\n              (0, _chai.expect)(true).to.be['true'];\n              done();\n            });\n          });\n        });\n      });\n    });\n\n    (0, _mocha.describe)('#authenticate', function () {\n      (0, _emberMocha.it)('sends an AJAX request to the token endpoint', function (done) {\n        authenticator.authenticate('username', 'password');\n\n        _ember['default'].run.next(function () {\n          (0, _chai.expect)(_ember['default'].$.ajax.getCall(0).args[0]).to.eql({\n            url: '/token',\n            type: 'POST',\n            data: { 'grant_type': 'password', username: 'username', password: 'password' },\n            dataType: 'json',\n            contentType: 'application/x-www-form-urlencoded'\n          });\n          done();\n        });\n      });\n\n      (0, _emberMocha.it)('sends an AJAX request to the token endpoint with client_id Basic Auth header', function (done) {\n        authenticator.set('clientId', 'test-client');\n        authenticator.authenticate('username', 'password');\n\n        _ember['default'].run.next(function () {\n          (0, _chai.expect)(_ember['default'].$.ajax.getCall(0).args[0]).to.eql({\n            url: '/token',\n            type: 'POST',\n            data: { 'grant_type': 'password', username: 'username', password: 'password' },\n            dataType: 'json',\n            contentType: 'application/x-www-form-urlencoded',\n            headers: { Authorization: 'Basic dGVzdC1jbGllbnQ6' }\n          });\n          done();\n        });\n      });\n\n      (0, _emberMocha.it)('sends a single OAuth scope to the token endpoint', function (done) {\n        authenticator.authenticate('username', 'password', 'public');\n\n        _ember['default'].run.next(function () {\n          (0, _chai.expect)(_ember['default'].$.ajax.getCall(0).args[0].data.scope).to.eql('public');\n          done();\n        });\n      });\n\n      (0, _emberMocha.it)('sends multiple OAuth scopes to the token endpoint', function (done) {\n        authenticator.authenticate('username', 'password', ['public', 'private']);\n\n        _ember['default'].run.next(function () {\n          (0, _chai.expect)(_ember['default'].$.ajax.getCall(0).args[0].data.scope).to.eql('public private');\n          done();\n        });\n      });\n\n      (0, _mocha.describe)('when the authentication request is successful', function () {\n        (0, _mocha.beforeEach)(function () {\n          server.respondWith('POST', '/token', [200, { 'Content-Type': 'application/json' }, '{ \"access_token\": \"secret token!\" }']);\n        });\n\n        (0, _emberMocha.it)('resolves with the correct data', function (done) {\n          authenticator.authenticate('username', 'password').then(function (data) {\n            (0, _chai.expect)(true).to.be['true'];\n            (0, _chai.expect)(data).to.eql({ 'access_token': 'secret token!' });\n            done();\n          });\n        });\n\n        (0, _mocha.describe)('when the server response includes expiration data', function () {\n          (0, _mocha.beforeEach)(function () {\n            server.respondWith('POST', '/token', [200, { 'Content-Type': 'application/json' }, '{ \"access_token\": \"secret token!\", \"expires_in\": 12345, \"refresh_token\": \"refresh token!\" }']);\n          });\n\n          (0, _emberMocha.it)('resolves with the correct data', function (done) {\n            authenticator.authenticate('username', 'password').then(function (data) {\n              (0, _chai.expect)(data['expires_at']).to.be.greaterThan(new Date().getTime());\n              delete data['expires_at'];\n              (0, _chai.expect)(data).to.eql({ 'access_token': 'secret token!', 'expires_in': 12345, 'refresh_token': 'refresh token!' });\n              done();\n            });\n          });\n        });\n      });\n\n      (0, _mocha.describe)('when the authentication request fails', function () {\n        (0, _mocha.beforeEach)(function () {\n          server.respondWith('POST', '/token', [400, { 'Content-Type': 'application/json' }, '{ \"error\": \"invalid_grant\" }']);\n        });\n\n        (0, _emberMocha.it)('rejects with the correct error', function (done) {\n          authenticator.authenticate('username', 'password')['catch'](function (error) {\n            (0, _chai.expect)(error).to.eql({ error: 'invalid_grant' });\n            done();\n          });\n        });\n      });\n    });\n\n    (0, _mocha.describe)('#invalidate', function () {\n      function itSuccessfullyInvalidatesTheSession() {\n        (0, _emberMocha.it)('returns a resolving promise', function (done) {\n          authenticator.invalidate({ 'access_token': 'access token!' }).then(function () {\n            (0, _chai.expect)(true).to.be['true'];\n            done();\n          });\n        });\n      }\n\n      (0, _mocha.describe)('when token revokation is enabled', function () {\n        (0, _mocha.beforeEach)(function () {\n          authenticator.serverTokenRevocationEndpoint = '/revoke';\n        });\n\n        (0, _emberMocha.it)('sends an AJAX request to the revokation endpoint', function (done) {\n          authenticator.invalidate({ 'access_token': 'access token!' });\n\n          _ember['default'].run.next(function () {\n            (0, _chai.expect)(_ember['default'].$.ajax.getCall(0).args[0]).to.eql({\n              url: '/revoke',\n              type: 'POST',\n              data: { 'token_type_hint': 'access_token', token: 'access token!' },\n              dataType: 'json',\n              contentType: 'application/x-www-form-urlencoded'\n            });\n            done();\n          });\n        });\n\n        (0, _mocha.describe)('when the revokation request is successful', function () {\n          (0, _mocha.beforeEach)(function () {\n            server.respondWith('POST', '/revoke', [200, { 'Content-Type': 'application/json' }, '']);\n          });\n\n          itSuccessfullyInvalidatesTheSession();\n        });\n\n        (0, _mocha.describe)('when the revokation request fails', function () {\n          (0, _mocha.beforeEach)(function () {\n            server.respondWith('POST', '/revoke', [400, { 'Content-Type': 'application/json' }, '{ \"error\": \"unsupported_grant_type\" }']);\n          });\n\n          itSuccessfullyInvalidatesTheSession();\n        });\n\n        (0, _mocha.describe)('when a refresh token is set', function () {\n          (0, _emberMocha.it)('sends an AJAX request to invalidate the refresh token', function (done) {\n            authenticator.invalidate({ 'access_token': 'access token!', 'refresh_token': 'refresh token!' });\n\n            _ember['default'].run.next(function () {\n              (0, _chai.expect)(_ember['default'].$.ajax.getCall(1).args[0]).to.eql({\n                url: '/revoke',\n                type: 'POST',\n                data: { 'token_type_hint': 'refresh_token', token: 'refresh token!' },\n                dataType: 'json',\n                contentType: 'application/x-www-form-urlencoded'\n              });\n              done();\n            });\n          });\n        });\n      });\n\n      (0, _mocha.describe)('when token revokation is not enabled', function () {\n        itSuccessfullyInvalidatesTheSession();\n      });\n    });\n\n    // testing private API here ;(\n    (0, _mocha.describe)('#_refreshAccessToken', function () {\n      (0, _emberMocha.it)('sends an AJAX request to the token endpoint', function (done) {\n        authenticator._refreshAccessToken(12345, 'refresh token!');\n\n        _ember['default'].run.next(function () {\n          (0, _chai.expect)(_ember['default'].$.ajax.getCall(0).args[0]).to.eql({\n            url: '/token',\n            type: 'POST',\n            data: { 'grant_type': 'refresh_token', 'refresh_token': 'refresh token!' },\n            dataType: 'json',\n            contentType: 'application/x-www-form-urlencoded'\n          });\n          done();\n        });\n      });\n\n      (0, _mocha.describe)('when the refresh request is successful', function () {\n        (0, _mocha.beforeEach)(function () {\n          server.respondWith('POST', '/token', [200, { 'Content-Type': 'application/json' }, '{ \"access_token\": \"secret token 2!\" }']);\n        });\n\n        (0, _emberMocha.it)('triggers the \"sessionDataUpdated\" event', function (done) {\n          authenticator.one('sessionDataUpdated', function (data) {\n            (0, _chai.expect)(data['expires_at']).to.be.greaterThan(new Date().getTime());\n            delete data['expires_at'];\n            (0, _chai.expect)(data).to.eql({ 'access_token': 'secret token 2!', 'expires_in': 12345, 'refresh_token': 'refresh token!' });\n            done();\n          });\n\n          authenticator._refreshAccessToken(12345, 'refresh token!');\n        });\n\n        (0, _mocha.describe)('when the server reponse includes updated expiration data', function () {\n          (0, _mocha.beforeEach)(function () {\n            server.respondWith('POST', '/token', [200, { 'Content-Type': 'application/json' }, '{ \"access_token\": \"secret token 2!\", \"expires_in\": 67890, \"refresh_token\": \"refresh token 2!\" }']);\n          });\n\n          (0, _emberMocha.it)('triggers the \"sessionDataUpdated\" event with the correct data', function (done) {\n            authenticator.one('sessionDataUpdated', function (data) {\n              (0, _chai.expect)(data['expires_at']).to.be.greaterThan(new Date().getTime());\n              delete data['expires_at'];\n              (0, _chai.expect)(data).to.eql({ 'access_token': 'secret token 2!', 'expires_in': 67890, 'refresh_token': 'refresh token 2!' });\n              done();\n            });\n\n            authenticator._refreshAccessToken(12345, 'refresh token!');\n          });\n        });\n      });\n    });\n  });\n});\n/* jshint expr:true */\n/* jscs:disable requireDotNotation */","define('dummy/tests/unit/authenticators/oauth2-password-grant-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/authenticators/oauth2-password-grant-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/authenticators/oauth2-password-grant-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/authenticators/oauth2-password-grant-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/authenticators/oauth2-password-grant-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/authenticators/oauth2-password-grant-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/authenticators/test-test', ['exports', 'ember-mocha', 'mocha', 'chai', 'ember-simple-auth/authenticators/test'], function (exports, _emberMocha, _mocha, _chai, _emberSimpleAuthAuthenticatorsTest) {\n\n  (0, _mocha.describe)('TestAuthenticator', function () {\n    var authenticator = undefined;\n\n    (0, _mocha.beforeEach)(function () {\n      authenticator = _emberSimpleAuthAuthenticatorsTest['default'].create();\n    });\n\n    (0, _mocha.describe)('#restore', function () {\n      (0, _emberMocha.it)('returns a resolving promise', function () {\n        return authenticator.restore().then(function () {\n          (0, _chai.expect)(true).to.be['true'];\n        });\n      });\n\n      (0, _emberMocha.it)('resolves with session data', function () {\n        return authenticator.restore({ userId: 1, otherData: 'some-data' }).then(function (data) {\n          (0, _chai.expect)(data).to.eql({ userId: 1, otherData: 'some-data' });\n        });\n      });\n    });\n\n    (0, _mocha.describe)('#authenticate', function () {\n      (0, _emberMocha.it)('returns a resolving promise', function () {\n        return authenticator.authenticate().then(function () {\n          (0, _chai.expect)(true).to.be['true'];\n        });\n      });\n\n      (0, _emberMocha.it)('resolves with session data', function () {\n        return authenticator.authenticate({ userId: 1, otherData: 'some-data' }).then(function (data) {\n          (0, _chai.expect)(data).to.eql({ userId: 1, otherData: 'some-data' });\n        });\n      });\n    });\n\n    (0, _mocha.describe)('#invalidate', function () {\n      (0, _emberMocha.it)('returns a resolving promise', function () {\n        return authenticator.invalidate().then(function () {\n          (0, _chai.expect)(true).to.be['true'];\n        });\n      });\n    });\n  });\n});\n/* jshint expr:true */","define('dummy/tests/unit/authenticators/test-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/authenticators/test-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/authenticators/test-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/authenticators/test-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/authenticators/test-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/authenticators/test-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/authenticators/torii-test', ['exports', 'ember', 'ember-mocha', 'mocha', 'chai', 'sinon', 'ember-simple-auth/authenticators/torii'], function (exports, _ember, _emberMocha, _mocha, _chai, _sinon, _emberSimpleAuthAuthenticatorsTorii) {\n\n  (0, _mocha.describe)('ToriiAuthenticator', function () {\n    var authenticator = undefined;\n    var torii = undefined;\n\n    (0, _mocha.beforeEach)(function () {\n      torii = {\n        fetch: function fetch() {},\n        open: function open() {},\n        close: function close() {}\n      };\n      authenticator = _emberSimpleAuthAuthenticatorsTorii['default'].create({ torii: torii });\n    });\n\n    (0, _mocha.describe)('#restore', function () {\n      function itDoesNotRestore(data) {\n        (0, _emberMocha.it)('returns a rejecting promise', function () {\n          return authenticator.restore(data)['catch'](function () {\n            (0, _chai.expect)(true).to.be['true'];\n          });\n        });\n      }\n\n      (0, _emberMocha.it)('throws if torii is not installed', function () {\n        authenticator.set('torii', null);\n\n        (0, _chai.expect)(function () {\n          authenticator.authenticate();\n        }).to['throw'];\n      });\n\n      (0, _mocha.describe)('when there is a torii provider in the session data', function () {\n        (0, _mocha.describe)('when torii fetches successfully', function () {\n          (0, _mocha.beforeEach)(function () {\n            _sinon['default'].stub(torii, 'fetch').returns(_ember['default'].RSVP.resolve({ some: 'other data' }));\n          });\n\n          (0, _emberMocha.it)('returns a promise that resolves with the session data', function () {\n            return authenticator.restore({ some: 'data', provider: 'provider' }).then(function (data) {\n              (0, _chai.expect)(data).to.eql({ some: 'other data', provider: 'provider' });\n            });\n          });\n        });\n\n        (0, _mocha.describe)('when torii does not fetch successfully', function () {\n          (0, _mocha.beforeEach)(function () {\n            _sinon['default'].stub(torii, 'fetch').returns(_ember['default'].RSVP.reject());\n          });\n\n          itDoesNotRestore({ some: 'data', provider: 'provider' });\n        });\n      });\n\n      (0, _mocha.describe)('when there is no torii provider in the session data', function () {\n        itDoesNotRestore();\n      });\n    });\n\n    (0, _mocha.describe)('#authenticate', function () {\n      (0, _emberMocha.it)('throws if torii is not installed', function () {\n        authenticator.set('torii', null);\n\n        (0, _chai.expect)(function () {\n          authenticator.authenticate();\n        }).to['throw'];\n      });\n\n      (0, _mocha.describe)('when torii opens successfully', function () {\n        (0, _mocha.beforeEach)(function () {\n          _sinon['default'].stub(torii, 'open').returns(_ember['default'].RSVP.resolve({ some: 'data' }));\n        });\n\n        (0, _emberMocha.it)('returns a promise that resolves with the session data', function () {\n          return authenticator.authenticate('provider').then(function (data) {\n            (0, _chai.expect)(data).to.eql({ some: 'data', provider: 'provider' });\n          });\n        });\n      });\n\n      (0, _mocha.describe)('when torii does not open successfully', function () {\n        (0, _mocha.beforeEach)(function () {\n          _sinon['default'].stub(torii, 'open').returns(_ember['default'].RSVP.reject());\n        });\n\n        (0, _emberMocha.it)('returns a rejecting promise', function () {\n          return authenticator.authenticate('provider')['catch'](function () {\n            (0, _chai.expect)(true).to.be['true'];\n          });\n        });\n      });\n    });\n\n    (0, _mocha.describe)('#invalidate', function () {\n      (0, _mocha.describe)('when torii closes successfully', function () {\n        (0, _mocha.beforeEach)(function () {\n          _sinon['default'].stub(torii, 'close').returns(_ember['default'].RSVP.resolve());\n        });\n\n        (0, _emberMocha.it)('returns a resolving promise', function () {\n          return authenticator.invalidate({ some: 'data' }).then(function () {\n            (0, _chai.expect)(true).to.be['true'];\n          });\n        });\n      });\n\n      (0, _mocha.describe)('when torii does not close successfully', function () {\n        (0, _mocha.beforeEach)(function () {\n          _sinon['default'].stub(torii, 'close').returns(_ember['default'].RSVP.reject());\n        });\n\n        (0, _emberMocha.it)('returns a rejecting promise', function () {\n          return authenticator.invalidate('provider')['catch'](function () {\n            (0, _chai.expect)(true).to.be['true'];\n          });\n        });\n      });\n    });\n  });\n});\n/* jshint expr:true */","define('dummy/tests/unit/authenticators/torii-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/authenticators/torii-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/authenticators/torii-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/authenticators/torii-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/authenticators/torii-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/authenticators/torii-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/authorizers/devise-test', ['exports', 'ember-mocha', 'mocha', 'chai', 'sinon', 'ember-simple-auth/authorizers/devise'], function (exports, _emberMocha, _mocha, _chai, _sinon, _emberSimpleAuthAuthorizersDevise) {\n\n  (0, _mocha.describe)('DeviseAuthorizer', function () {\n    var authorizer = undefined;\n    var block = undefined;\n    var data = undefined;\n\n    (0, _mocha.beforeEach)(function () {\n      authorizer = _emberSimpleAuthAuthorizersDevise['default'].create();\n      block = _sinon['default'].spy();\n    });\n\n    (0, _mocha.describe)('#authorize', function () {\n      function itDoesNotAuthorizeTheRequest() {\n        (0, _emberMocha.it)('does not call the block', function () {\n          authorizer.authorize(data, block);\n\n          (0, _chai.expect)(block).to.not.have.been.called;\n        });\n      }\n\n      (0, _mocha.describe)('when the session data contains a non empty token and email', function () {\n        (0, _mocha.beforeEach)(function () {\n          data = {\n            token: 'secret token!',\n            email: 'user@email.com'\n          };\n        });\n\n        (0, _emberMocha.it)('calls the block with a header containing \"token\" and \"email\"', function () {\n          authorizer.authorize(data, block);\n\n          (0, _chai.expect)(block).to.have.been.calledWith('Authorization', 'Token token=\"secret token!\", email=\"user@email.com\"');\n        });\n      });\n\n      (0, _mocha.describe)('when custom identification and token attribute names are configured', function () {\n        (0, _mocha.beforeEach)(function () {\n          authorizer = _emberSimpleAuthAuthorizersDevise['default'].extend({ tokenAttributeName: 'employee_token', identificationAttributeName: 'employee_email' }).create();\n        });\n\n        (0, _mocha.describe)('when the session data contains a non empty employee_token and employee_email', function () {\n          (0, _mocha.beforeEach)(function () {\n            data = {\n              'employee_token': 'secret token!',\n              'employee_email': 'user@email.com'\n            };\n          });\n\n          (0, _emberMocha.it)('calls the block with a header containing \"employee_token\" and \"employee_email\"', function () {\n            authorizer.authorize(data, block);\n\n            (0, _chai.expect)(block).to.have.been.calledWith('Authorization', 'Token employee_token=\"secret token!\", employee_email=\"user@email.com\"');\n          });\n        });\n      });\n\n      (0, _mocha.describe)('when the session data does not contain a token', function () {\n        (0, _mocha.beforeEach)(function () {\n          data = {\n            email: 'user@email.com'\n          };\n        });\n\n        itDoesNotAuthorizeTheRequest();\n      });\n\n      (0, _mocha.describe)('when the session data does not contain an email', function () {\n        (0, _mocha.beforeEach)(function () {\n          data = {\n            token: 'secret token!'\n          };\n        });\n\n        itDoesNotAuthorizeTheRequest();\n      });\n    });\n  });\n});\n/* jshint expr:true */","define('dummy/tests/unit/authorizers/devise-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/authorizers/devise-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/authorizers/devise-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/authorizers/devise-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/authorizers/devise-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/authorizers/devise-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/authorizers/oauth2-bearer-test', ['exports', 'ember-mocha', 'mocha', 'chai', 'sinon', 'ember-simple-auth/authorizers/oauth2-bearer'], function (exports, _emberMocha, _mocha, _chai, _sinon, _emberSimpleAuthAuthorizersOauth2Bearer) {\n\n  (0, _mocha.describe)('OAuth2BearerAuthorizer', function () {\n    var authorizer = undefined;\n    var data = undefined;\n    var block = undefined;\n\n    (0, _mocha.beforeEach)(function () {\n      authorizer = _emberSimpleAuthAuthorizersOauth2Bearer['default'].create();\n      block = _sinon['default'].spy();\n    });\n\n    (0, _mocha.describe)('#authorize', function () {\n      function itDoesNotAuthorizeTheRequest() {\n        (0, _emberMocha.it)('does not call the block', function () {\n          authorizer.authorize(data, block);\n\n          (0, _chai.expect)(block).to.not.have.been.called;\n        });\n      }\n\n      (0, _mocha.describe)('when the session data contains a non empty access_token', function () {\n        (0, _mocha.beforeEach)(function () {\n          data = {\n            'access_token': 'secret token!'\n          };\n        });\n\n        (0, _emberMocha.it)('calls the block with a Bearer token header', function () {\n          authorizer.authorize(data, block);\n\n          (0, _chai.expect)(block).to.have.been.calledWith('Authorization', 'Bearer secret token!');\n        });\n      });\n\n      (0, _mocha.describe)('when the session does not contain an access_token', function () {\n        (0, _mocha.beforeEach)(function () {\n          data = {};\n        });\n\n        itDoesNotAuthorizeTheRequest();\n      });\n    });\n  });\n});\n/* jshint expr:true */","define('dummy/tests/unit/authorizers/oauth2-bearer-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/authorizers/oauth2-bearer-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/authorizers/oauth2-bearer-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/authorizers/oauth2-bearer-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/authorizers/oauth2-bearer-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/authorizers/oauth2-bearer-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/configuration-test', ['exports', 'ember-mocha', 'mocha', 'chai', 'ember-simple-auth/configuration'], function (exports, _emberMocha, _mocha, _chai, _emberSimpleAuthConfiguration) {\n\n  (0, _mocha.describe)('Configuration', function () {\n    (0, _mocha.afterEach)(function () {\n      _emberSimpleAuthConfiguration['default'].load({});\n    });\n\n    (0, _mocha.describe)('baseURL', function () {\n      (0, _emberMocha.it)('defaults to \"\"', function () {\n        _emberSimpleAuthConfiguration['default'].load({});\n\n        (0, _chai.expect)(_emberSimpleAuthConfiguration['default'].baseURL).to.eql('');\n      });\n    });\n\n    (0, _mocha.describe)('authenticationRoute', function () {\n      (0, _emberMocha.it)('defaults to \"login\"', function () {\n        (0, _chai.expect)(_emberSimpleAuthConfiguration['default'].authenticationRoute).to.eql('login');\n      });\n    });\n\n    (0, _mocha.describe)('routeAfterAuthentication', function () {\n      (0, _emberMocha.it)('defaults to \"index\"', function () {\n        (0, _chai.expect)(_emberSimpleAuthConfiguration['default'].routeAfterAuthentication).to.eql('index');\n      });\n    });\n\n    (0, _mocha.describe)('routeIfAlreadyAuthenticated', function () {\n      (0, _emberMocha.it)('defaults to \"index\"', function () {\n        (0, _chai.expect)(_emberSimpleAuthConfiguration['default'].routeIfAlreadyAuthenticated).to.eql('index');\n      });\n    });\n\n    (0, _mocha.describe)('.load', function () {\n      (0, _emberMocha.it)('sets baseURL correctly', function () {\n        _emberSimpleAuthConfiguration['default'].load({ baseURL: '/baseURL' });\n\n        (0, _chai.expect)(_emberSimpleAuthConfiguration['default'].baseURL).to.eql('/baseURL');\n      });\n\n      (0, _emberMocha.it)('sets authenticationRoute correctly', function () {\n        _emberSimpleAuthConfiguration['default'].load({ authenticationRoute: 'authenticationRoute' });\n\n        (0, _chai.expect)(_emberSimpleAuthConfiguration['default'].authenticationRoute).to.eql('authenticationRoute');\n      });\n\n      (0, _emberMocha.it)('sets routeAfterAuthentication correctly', function () {\n        _emberSimpleAuthConfiguration['default'].load({ routeAfterAuthentication: 'routeAfterAuthentication' });\n\n        (0, _chai.expect)(_emberSimpleAuthConfiguration['default'].routeAfterAuthentication).to.eql('routeAfterAuthentication');\n      });\n\n      (0, _emberMocha.it)('sets routeIfAlreadyAuthenticated correctly', function () {\n        _emberSimpleAuthConfiguration['default'].load({ routeIfAlreadyAuthenticated: 'routeIfAlreadyAuthenticated' });\n\n        (0, _chai.expect)(_emberSimpleAuthConfiguration['default'].routeIfAlreadyAuthenticated).to.eql('routeIfAlreadyAuthenticated');\n      });\n    });\n  });\n});\n/* jshint expr:true */","define('dummy/tests/unit/configuration-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/configuration-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/configuration-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/configuration-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/configuration-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/configuration-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/initializers/setup-session-service-test', ['exports', 'ember-mocha', 'mocha', 'chai', 'sinon', 'ember-simple-auth/initializers/setup-session-service'], function (exports, _emberMocha, _mocha, _chai, _sinon, _emberSimpleAuthInitializersSetupSessionService) {\n\n  (0, _mocha.describe)('setupSessionService', function () {\n    var registry = undefined;\n\n    (0, _mocha.beforeEach)(function () {\n      registry = {\n        injection: function injection() {}\n      };\n    });\n\n    (0, _emberMocha.it)('injects the session into the session service', function () {\n      _sinon['default'].spy(registry, 'injection');\n      (0, _emberSimpleAuthInitializersSetupSessionService['default'])(registry);\n\n      (0, _chai.expect)(registry.injection).to.have.been.calledWith('service:session', 'session', 'session:main');\n    });\n  });\n});\n/* jshint expr:true */","define('dummy/tests/unit/initializers/setup-session-service-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/initializers/setup-session-service-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/initializers/setup-session-service-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/initializers/setup-session-service-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/initializers/setup-session-service-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/initializers/setup-session-service-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/initializers/setup-session-test', ['exports', 'ember', 'ember-mocha', 'mocha', 'chai', 'sinon', 'ember-simple-auth/initializers/setup-session', 'ember-simple-auth/session-stores/ephemeral', 'ember-simple-auth/internal-session'], function (exports, _ember, _emberMocha, _mocha, _chai, _sinon, _emberSimpleAuthInitializersSetupSession, _emberSimpleAuthSessionStoresEphemeral, _emberSimpleAuthInternalSession) {\n\n  (0, _mocha.describe)('setupSession', function () {\n    var registry = undefined;\n\n    (0, _mocha.beforeEach)(function () {\n      registry = {\n        register: function register() {},\n        injection: function injection() {}\n      };\n    });\n\n    (0, _emberMocha.it)('registers the session', function () {\n      _sinon['default'].spy(registry, 'register');\n      (0, _emberSimpleAuthInitializersSetupSession['default'])(registry);\n\n      (0, _chai.expect)(registry.register).to.have.been.calledWith('session:main', _emberSimpleAuthInternalSession['default']);\n    });\n\n    (0, _mocha.describe)('when Ember.testing is true', function () {\n      (0, _emberMocha.it)('registers the test session store', function () {\n        _sinon['default'].spy(registry, 'register');\n        (0, _emberSimpleAuthInitializersSetupSession['default'])(registry);\n\n        (0, _chai.expect)(registry.register).to.have.been.calledWith('session-store:test', _emberSimpleAuthSessionStoresEphemeral['default']);\n      });\n\n      (0, _emberMocha.it)('injects the test session store into the session', function () {\n        _sinon['default'].spy(registry, 'injection');\n        (0, _emberSimpleAuthInitializersSetupSession['default'])(registry);\n\n        (0, _chai.expect)(registry.injection).to.have.been.calledWith('session:main', 'store', 'session-store:test');\n      });\n    });\n\n    (0, _mocha.describe)('when Ember.testing is false', function () {\n      (0, _mocha.beforeEach)(function () {\n        _ember['default'].testing = false;\n      });\n\n      (0, _mocha.afterEach)(function () {\n        _ember['default'].testing = true;\n      });\n\n      (0, _emberMocha.it)('injects the application session store into the session', function () {\n        _sinon['default'].spy(registry, 'injection');\n        (0, _emberSimpleAuthInitializersSetupSession['default'])(registry);\n\n        (0, _chai.expect)(registry.injection).to.have.been.calledWith('session:main', 'store', 'session-store:application');\n      });\n    });\n  });\n});\n/* jshint expr:true */","define('dummy/tests/unit/initializers/setup-session-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/initializers/setup-session-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/initializers/setup-session-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/initializers/setup-session-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/initializers/setup-session-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/initializers/setup-session-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/instance-initializers/setup-session-restoration-test', ['exports', 'ember', 'ember-mocha', 'mocha', 'chai', 'sinon', 'ember-simple-auth/instance-initializers/setup-session-restoration'], function (exports, _ember, _emberMocha, _mocha, _chai, _sinon, _emberSimpleAuthInstanceInitializersSetupSessionRestoration) {\n\n  (0, _mocha.describe)('setupSessionRestoration', function () {\n    var container = undefined;\n    var containerStub = undefined;\n    var route = undefined;\n\n    (0, _mocha.beforeEach)(function () {\n      container = {\n        lookup: function lookup() {}\n      };\n\n      var Route = _ember['default'].Route.extend();\n      route = Route.create();\n\n      containerStub = _sinon['default'].stub(container, 'lookup');\n    });\n\n    (0, _emberMocha.it)('adds a beforeModel method', function () {\n      containerStub.withArgs('route:application').returns(route);\n      (0, _emberSimpleAuthInstanceInitializersSetupSessionRestoration['default'])({ container: container });\n\n      (0, _chai.expect)(route).to.respondTo('beforeModel');\n    });\n\n    (0, _mocha.describe)('the beforeModel method', function () {\n      var session = undefined;\n\n      (0, _mocha.beforeEach)(function () {\n        session = {\n          restore: function restore() {}\n        };\n\n        var Route = _ember['default'].Route.extend({\n          beforeModel: function beforeModel() {\n            return _ember['default'].RSVP.resolve('test');\n          }\n        });\n        route = Route.create();\n\n        containerStub.withArgs('route:application').returns(route);\n        containerStub.withArgs('session:main').returns(session);\n        (0, _emberSimpleAuthInstanceInitializersSetupSessionRestoration['default'])({ container: container });\n      });\n\n      (0, _mocha.describe)('when session restoration resolves', function () {\n        (0, _mocha.beforeEach)(function () {\n          _sinon['default'].stub(session, 'restore').returns(_ember['default'].RSVP.resolve());\n        });\n\n        (0, _emberMocha.it)('returns the return value of the original \"beforeModel\" method', function () {\n          return route.beforeModel().then(function (value) {\n            (0, _chai.expect)(value).to.eq('test');\n          });\n        });\n      });\n\n      (0, _mocha.describe)('when session restoration rejects', function () {\n        (0, _mocha.beforeEach)(function () {\n          _sinon['default'].stub(session, 'restore').returns(_ember['default'].RSVP.reject());\n        });\n\n        (0, _emberMocha.it)('returns the return value of the original \"beforeModel\" method', function () {\n          return route.beforeModel().then(function (value) {\n            (0, _chai.expect)(value).to.eq('test');\n          });\n        });\n      });\n    });\n  });\n});\n/* jshint expr:true */","define('dummy/tests/unit/instance-initializers/setup-session-restoration-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/instance-initializers/setup-session-restoration-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/instance-initializers/setup-session-restoration-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/instance-initializers/setup-session-restoration-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/instance-initializers/setup-session-restoration-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/instance-initializers/setup-session-restoration-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/internal-session-test', ['exports', 'ember', 'ember-mocha', 'mocha', 'chai', 'sinon', 'ember-simple-auth/internal-session', 'ember-simple-auth/session-stores/ephemeral', 'ember-simple-auth/authenticators/base'], function (exports, _ember, _emberMocha, _mocha, _chai, _sinon, _emberSimpleAuthInternalSession, _emberSimpleAuthSessionStoresEphemeral, _emberSimpleAuthAuthenticatorsBase) {\n\n  (0, _mocha.describe)('InternalSession', function () {\n    var session = undefined;\n    var store = undefined;\n    var authenticator = undefined;\n    var container = undefined;\n\n    (0, _mocha.beforeEach)(function () {\n      container = { lookup: function lookup() {} };\n      store = _emberSimpleAuthSessionStoresEphemeral['default'].create();\n      authenticator = _emberSimpleAuthAuthenticatorsBase['default'].create();\n      session = _emberSimpleAuthInternalSession['default'].create({ store: store, container: container });\n      _sinon['default'].stub(container, 'lookup').withArgs('authenticator').returns(authenticator);\n    });\n\n    (0, _emberMocha.it)('does not allow data to be stored for the key \"authenticated\"', function () {\n      (0, _chai.expect)(function () {\n        session.set('authenticated', 'test');\n      }).to['throw'](Error);\n    });\n\n    function itHandlesAuthenticatorEvents(preparation) {\n      (0, _mocha.describe)('when the authenticator triggers the \"sessionDataUpdated\" event', function () {\n        (0, _mocha.beforeEach)(function () {\n          return preparation.call();\n        });\n\n        (0, _emberMocha.it)('stores the data the event is triggered with in its authenticated section', function (done) {\n          authenticator.trigger('sessionDataUpdated', { some: 'property' });\n\n          _ember['default'].run.next(function () {\n            (0, _chai.expect)(session.get('authenticated')).to.eql({ some: 'property', authenticator: 'authenticator' });\n            done();\n          });\n        });\n      });\n\n      (0, _mocha.describe)('when the authenticator triggers the \"invalidated\" event', function () {\n        (0, _mocha.beforeEach)(function () {\n          return preparation.call();\n        });\n\n        (0, _emberMocha.it)('is not authenticated', function (done) {\n          authenticator.trigger('sessionDataInvalidated');\n\n          _ember['default'].run.next(function () {\n            (0, _chai.expect)(session.get('isAuthenticated')).to.be['false'];\n            done();\n          });\n        });\n\n        (0, _emberMocha.it)('clears its authenticated section', function (done) {\n          session.set('content', { some: 'property', authenticated: { some: 'other property' } });\n          authenticator.trigger('sessionDataInvalidated');\n\n          _ember['default'].run.next(function () {\n            (0, _chai.expect)(session.get('content')).to.eql({ some: 'property', authenticated: {} });\n            done();\n          });\n        });\n\n        (0, _emberMocha.it)('updates the store', function (done) {\n          authenticator.trigger('sessionDataInvalidated');\n\n          _ember['default'].run.next(function () {\n            store.restore().then(function (properties) {\n              (0, _chai.expect)(properties.authenticated).to.eql({});\n              done();\n            });\n          });\n        });\n\n        (0, _emberMocha.it)('triggers the \"invalidationSucceeded\" event', function (done) {\n          var triggered = false;\n          session.one('invalidationSucceeded', function () {\n            triggered = true;\n          });\n          authenticator.trigger('sessionDataInvalidated');\n\n          _ember['default'].run.next(function () {\n            (0, _chai.expect)(triggered).to.be['true'];\n            done();\n          });\n        });\n      });\n    }\n\n    (0, _mocha.describe)('restore', function () {\n      function itDoesNotRestore() {\n        (0, _emberMocha.it)('returns a rejecting promise', function () {\n          return session.restore()['catch'](function () {\n            (0, _chai.expect)(true).to.be['true'];\n          });\n        });\n\n        (0, _emberMocha.it)('is not authenticated', function () {\n          return session.restore()['catch'](function () {\n            (0, _chai.expect)(session.get('isAuthenticated')).to.be['false'];\n          });\n        });\n\n        (0, _emberMocha.it)('clears its authenticated section', function () {\n          store.persist({ some: 'property', authenticated: { some: 'other property' } });\n\n          return session.restore()['catch'](function () {\n            (0, _chai.expect)(session.get('content')).to.eql({ some: 'property', authenticated: {} });\n          });\n        });\n      }\n\n      (0, _mocha.describe)('when the restored data contains an authenticator factory', function () {\n        (0, _mocha.beforeEach)(function () {\n          store.persist({ authenticated: { authenticator: 'authenticator' } });\n        });\n\n        (0, _mocha.describe)('when the authenticator resolves restoration', function () {\n          (0, _mocha.beforeEach)(function () {\n            _sinon['default'].stub(authenticator, 'restore').returns(_ember['default'].RSVP.resolve({ some: 'property' }));\n          });\n\n          (0, _emberMocha.it)('returns a resolving promise', function () {\n            return session.restore().then(function () {\n              (0, _chai.expect)(true).to.be['true'];\n            });\n          });\n\n          (0, _emberMocha.it)('is authenticated', function () {\n            return session.restore().then(function () {\n              (0, _chai.expect)(session.get('isAuthenticated')).to.be['true'];\n            });\n          });\n\n          (0, _emberMocha.it)('stores the data the authenticator resolves with in its authenticated section', function () {\n            return store.persist({ authenticated: { authenticator: 'authenticator' } }).then(function () {\n              return session.restore().then(function () {\n                return store.restore().then(function (properties) {\n                  delete properties.authenticator;\n\n                  (0, _chai.expect)(session.get('authenticated')).to.eql({ some: 'property', authenticator: 'authenticator' });\n                });\n              });\n            });\n          });\n\n          (0, _emberMocha.it)('persists its content in the store', function () {\n            return store.persist({ authenticated: { authenticator: 'authenticator' }, someOther: 'property' }).then(function () {\n              return session.restore().then(function () {\n                return store.restore().then(function (properties) {\n                  delete properties.authenticator;\n\n                  (0, _chai.expect)(properties).to.eql({ authenticated: { some: 'property', authenticator: 'authenticator' }, someOther: 'property' });\n                });\n              });\n            });\n          });\n\n          (0, _emberMocha.it)('persists the authenticator factory in the store', function () {\n            return session.restore().then(function () {\n              return store.restore().then(function (properties) {\n                (0, _chai.expect)(properties.authenticated.authenticator).to.eql('authenticator');\n              });\n            });\n          });\n\n          (0, _emberMocha.it)('does not trigger the \"authenticationSucceeded\" event', function () {\n            var triggered = false;\n            session.one('authenticationSucceeded', function () {\n              return triggered = true;\n            });\n\n            return session.restore().then(function () {\n              (0, _chai.expect)(triggered).to.be['false'];\n            });\n          });\n\n          itHandlesAuthenticatorEvents(function () {\n            return session.restore();\n          });\n        });\n\n        (0, _mocha.describe)('when the authenticator rejects restoration', function () {\n          (0, _mocha.beforeEach)(function () {\n            _sinon['default'].stub(authenticator, 'restore').returns(_ember['default'].RSVP.reject());\n          });\n\n          itDoesNotRestore();\n        });\n      });\n\n      (0, _mocha.describe)('when the restored data does not contain an authenticator factory', function () {\n        itDoesNotRestore();\n      });\n\n      (0, _mocha.describe)('when the store rejects restoration', function () {\n        (0, _mocha.beforeEach)(function () {\n          _sinon['default'].stub(store, 'restore').returns(_ember['default'].RSVP.Promise.reject());\n        });\n\n        (0, _emberMocha.it)('is not authenticated', function () {\n          return session.restore().then(function () {\n            (0, _chai.expect)(session.get('isAuthenticated')).to.be['false'];\n          });\n        });\n      });\n\n      (0, _mocha.describe)('when the store rejects persistance', function () {\n        (0, _mocha.beforeEach)(function () {\n          _sinon['default'].stub(store, 'persist').returns(_ember['default'].RSVP.reject());\n        });\n\n        (0, _emberMocha.it)('is not authenticated', function () {\n          return session.restore().then(function () {\n            (0, _chai.expect)(session.get('isAuthenticated')).to.be['false'];\n          });\n        });\n      });\n\n      (0, _mocha.describe)('with older synchronous stores (< v1.1.0)', function () {\n        (0, _mocha.describe)('when restoring the session', function () {\n          (0, _mocha.beforeEach)(function () {\n            _sinon['default'].stub(store, 'persist').returns();\n            _sinon['default'].stub(store, 'clear').returns();\n          });\n\n          (0, _mocha.describe)('when the store resolves restoration', function () {\n            (0, _mocha.beforeEach)(function () {\n              _sinon['default'].stub(store, 'restore').returns({ authenticated: { authenticator: 'authenticator' } });\n            });\n\n            (0, _emberMocha.it)('is authenticated', function () {\n              return session.restore().then(function () {\n                (0, _chai.expect)(session.get('isAuthenticated')).to.be['true'];\n              });\n            });\n          });\n\n          (0, _mocha.describe)('when the store rejects restoration', function () {\n            (0, _mocha.beforeEach)(function () {\n              _sinon['default'].stub(store, 'restore').returns({});\n            });\n\n            (0, _emberMocha.it)('is not authenticated', function () {\n              return session.restore().then(function () {\n                (0, _chai.expect)(session.get('isAuthenticated')).to.be['false'];\n              });\n            });\n          });\n        });\n      });\n    });\n\n    (0, _mocha.describe)('authentication', function () {\n      (0, _mocha.describe)('when the authenticator resolves authentication', function () {\n        (0, _mocha.beforeEach)(function () {\n          _sinon['default'].stub(authenticator, 'authenticate').returns(_ember['default'].RSVP.resolve({ some: 'property' }));\n        });\n\n        (0, _emberMocha.it)('is authenticated', function () {\n          return session.authenticate('authenticator').then(function () {\n            (0, _chai.expect)(session.get('isAuthenticated')).to.be['true'];\n          });\n        });\n\n        (0, _emberMocha.it)('returns a resolving promise', function () {\n          return session.authenticate('authenticator').then(function () {\n            (0, _chai.expect)(true).to.be['true'];\n          });\n        });\n\n        (0, _emberMocha.it)('stores the data the authenticator resolves with in its authenticated section', function () {\n          return session.authenticate('authenticator').then(function () {\n            (0, _chai.expect)(session.get('authenticated')).to.eql({ some: 'property', authenticator: 'authenticator' });\n          });\n        });\n\n        (0, _emberMocha.it)('persists its content in the store', function () {\n          return session.authenticate('authenticator').then(function () {\n            return store.restore().then(function (properties) {\n              delete properties.authenticator;\n\n              (0, _chai.expect)(properties).to.eql({ authenticated: { some: 'property', authenticator: 'authenticator' } });\n            });\n          });\n        });\n\n        (0, _emberMocha.it)('persists the authenticator factory in the store', function () {\n          return session.authenticate('authenticator').then(function () {\n            return store.restore().then(function (properties) {\n              (0, _chai.expect)(properties.authenticated.authenticator).to.eql('authenticator');\n            });\n          });\n        });\n\n        (0, _emberMocha.it)('triggers the \"authenticationSucceeded\" event', function () {\n          var triggered = false;\n          session.one('authenticationSucceeded', function () {\n            return triggered = true;\n          });\n\n          return session.authenticate('authenticator').then(function () {\n            (0, _chai.expect)(triggered).to.be['true'];\n          });\n        });\n\n        itHandlesAuthenticatorEvents(function () {\n          return session.authenticate('authenticator');\n        });\n      });\n\n      (0, _mocha.describe)('when the authenticator rejects authentication', function () {\n        (0, _emberMocha.it)('is not authenticated', function () {\n          _sinon['default'].stub(authenticator, 'authenticate').returns(_ember['default'].RSVP.reject('error auth'));\n\n          return session.authenticate('authenticator')['catch'](function () {\n            (0, _chai.expect)(session.get('isAuthenticated')).to.be['false'];\n          });\n        });\n\n        (0, _emberMocha.it)('returns a rejecting promise', function () {\n          _sinon['default'].stub(authenticator, 'authenticate').returns(_ember['default'].RSVP.reject('error auth'));\n\n          return session.authenticate('authenticator')['catch'](function () {\n            (0, _chai.expect)(true).to.be['true'];\n          });\n        });\n\n        (0, _emberMocha.it)('clears its authenticated section', function () {\n          _sinon['default'].stub(authenticator, 'authenticate').returns(_ember['default'].RSVP.reject('error auth'));\n          session.set('content', { some: 'property', authenticated: { some: 'other property' } });\n\n          return session.authenticate('authenticator')['catch'](function () {\n            (0, _chai.expect)(session.get('content')).to.eql({ some: 'property', authenticated: {} });\n          });\n        });\n\n        (0, _emberMocha.it)('updates the store', function () {\n          _sinon['default'].stub(authenticator, 'authenticate').returns(_ember['default'].RSVP.reject('error auth'));\n          session.set('content', { some: 'property', authenticated: { some: 'other property' } });\n\n          return session.authenticate('authenticator')['catch'](function () {\n            return store.restore().then(function (properties) {\n              (0, _chai.expect)(properties).to.eql({ some: 'property', authenticated: {} });\n            });\n          });\n        });\n\n        (0, _emberMocha.it)('does not trigger the \"authenticationSucceeded\" event', function () {\n          var triggered = false;\n          _sinon['default'].stub(authenticator, 'authenticate').returns(_ember['default'].RSVP.reject('error auth'));\n          session.one('authenticationSucceeded', function () {\n            return triggered = true;\n          });\n\n          return session.authenticate('authenticator')['catch'](function () {\n            (0, _chai.expect)(triggered).to.be['false'];\n          });\n        });\n      });\n\n      (0, _mocha.describe)('when the store rejects persistance', function () {\n        (0, _mocha.beforeEach)(function () {\n          _sinon['default'].stub(store, 'persist').returns(_ember['default'].RSVP.reject());\n        });\n\n        (0, _emberMocha.it)('is not authenticated', function () {\n          return session.authenticate('authenticator').then(function () {\n            (0, _chai.expect)(session.get('isAuthenticated')).to.be['false'];\n          });\n        });\n      });\n    });\n\n    (0, _mocha.describe)('invalidation', function () {\n      (0, _mocha.beforeEach)(function () {\n        _sinon['default'].stub(authenticator, 'authenticate').returns(_ember['default'].RSVP.resolve({ some: 'property' }));\n        return session.authenticate('authenticator');\n      });\n\n      (0, _mocha.describe)('when the authenticator resolves invaldiation', function () {\n        (0, _mocha.beforeEach)(function () {\n          _sinon['default'].stub(authenticator, 'invalidate').returns(_ember['default'].RSVP.resolve());\n        });\n\n        (0, _emberMocha.it)('is not authenticated', function () {\n          return session.invalidate().then(function () {\n            (0, _chai.expect)(session.get('isAuthenticated')).to.be['false'];\n          });\n        });\n\n        (0, _emberMocha.it)('returns a resolving promise', function () {\n          return session.invalidate().then(function () {\n            (0, _chai.expect)(true).to.be['true'];\n          });\n        });\n\n        (0, _emberMocha.it)('clears its authenticated section', function () {\n          session.set('content', { some: 'property', authenticated: { some: 'other property' } });\n\n          return session.invalidate().then(function () {\n            (0, _chai.expect)(session.get('content')).to.eql({ some: 'property', authenticated: {} });\n          });\n        });\n\n        (0, _emberMocha.it)('updates the store', function () {\n          session.set('content', { some: 'property', authenticated: { some: 'other property' } });\n\n          return session.invalidate().then(function () {\n            return store.restore().then(function (properties) {\n              (0, _chai.expect)(properties).to.eql({ some: 'property', authenticated: {} });\n            });\n          });\n        });\n\n        (0, _emberMocha.it)('triggers the \"invalidationSucceeded\" event', function () {\n          var triggered = false;\n          session.one('invalidationSucceeded', function () {\n            return triggered = true;\n          });\n\n          return session.invalidate().then(function () {\n            (0, _chai.expect)(triggered).to.be['true'];\n          });\n        });\n      });\n\n      (0, _mocha.describe)('when the authenticator rejects invalidation', function () {\n        (0, _emberMocha.it)('stays authenticated', function () {\n          _sinon['default'].stub(authenticator, 'invalidate').returns(_ember['default'].RSVP.reject('error'));\n\n          return session.invalidate()['catch'](function () {\n            (0, _chai.expect)(session.get('isAuthenticated')).to.be['true'];\n          });\n        });\n\n        (0, _emberMocha.it)('returns a rejecting promise', function () {\n          _sinon['default'].stub(authenticator, 'invalidate').returns(_ember['default'].RSVP.reject('error'));\n\n          return session.invalidate()['catch'](function () {\n            (0, _chai.expect)(true).to.be['true'];\n          });\n        });\n\n        (0, _emberMocha.it)('keeps its content', function () {\n          _sinon['default'].stub(authenticator, 'invalidate').returns(_ember['default'].RSVP.reject('error'));\n\n          return session.invalidate()['catch'](function () {\n            (0, _chai.expect)(session.get('authenticated')).to.eql({ some: 'property', authenticator: 'authenticator' });\n          });\n        });\n\n        (0, _emberMocha.it)('does not update the store', function () {\n          _sinon['default'].stub(authenticator, 'invalidate').returns(_ember['default'].RSVP.reject('error'));\n\n          return session.invalidate()['catch'](function () {\n            return store.restore().then(function (properties) {\n              (0, _chai.expect)(properties).to.eql({ authenticated: { some: 'property', authenticator: 'authenticator' } });\n            });\n          });\n        });\n\n        (0, _emberMocha.it)('does not trigger the \"invalidationSucceeded\" event', function () {\n          _sinon['default'].stub(authenticator, 'invalidate').returns(_ember['default'].RSVP.reject('error'));\n          var triggered = false;\n          session.one('invalidationSucceeded', function () {\n            return triggered = true;\n          });\n\n          return session.invalidate()['catch'](function () {\n            (0, _chai.expect)(triggered).to.be['false'];\n          });\n        });\n\n        itHandlesAuthenticatorEvents(_ember['default'].K);\n      });\n\n      (0, _mocha.describe)('when the store rejects persistance', function () {\n        (0, _mocha.beforeEach)(function () {\n          _sinon['default'].stub(store, 'persist').returns(_ember['default'].RSVP.reject());\n        });\n\n        (0, _emberMocha.it)('rejects but is not authenticated', function () {\n          return session.invalidate()['catch'](function () {\n            (0, _chai.expect)(session.get('isAuthenticated')).to.be['false'];\n          });\n        });\n      });\n    });\n\n    (0, _mocha.describe)(\"when the session's content changes\", function () {\n      (0, _mocha.describe)('when a single property is set', function () {\n        (0, _mocha.beforeEach)(function () {\n          session.set('some', 'property');\n        });\n\n        (0, _emberMocha.it)('persists its content in the store', function () {\n          return store.restore().then(function (properties) {\n            delete properties.authenticator;\n\n            (0, _chai.expect)(properties).to.eql({ some: 'property', authenticated: {} });\n          });\n        });\n      });\n\n      (0, _mocha.describe)('when multiple properties are set at once', function () {\n        (0, _mocha.beforeEach)(function () {\n          session.set('some', 'property');\n          session.setProperties({ multiple: 'properties' });\n        });\n\n        (0, _emberMocha.it)('persists its content in the store', function () {\n          return store.restore().then(function (properties) {\n            delete properties.authenticator;\n\n            (0, _chai.expect)(properties).to.eql({ some: 'property', multiple: 'properties', authenticated: {} });\n          });\n        });\n      });\n    });\n\n    (0, _mocha.describe)('when the store triggers the \"sessionDataUpdated\" event', function () {\n      (0, _mocha.describe)('when there is an authenticator factory in the event data', function () {\n        (0, _mocha.describe)('when the authenticator resolves restoration', function () {\n          (0, _mocha.beforeEach)(function () {\n            _sinon['default'].stub(authenticator, 'restore').returns(_ember['default'].RSVP.resolve({ some: 'other property' }));\n          });\n\n          (0, _emberMocha.it)('is authenticated', function (done) {\n            store.trigger('sessionDataUpdated', { some: 'other property', authenticated: { authenticator: 'authenticator' } });\n\n            _ember['default'].run.next(function () {\n              (0, _chai.expect)(session.get('isAuthenticated')).to.be['true'];\n              done();\n            });\n          });\n\n          (0, _emberMocha.it)('stores the data the authenticator resolves with in its authenticated section', function (done) {\n            store.trigger('sessionDataUpdated', { some: 'property', authenticated: { authenticator: 'authenticator' } });\n\n            _ember['default'].run.next(function () {\n              (0, _chai.expect)(session.get('authenticated')).to.eql({ some: 'other property', authenticator: 'authenticator' });\n              done();\n            });\n          });\n\n          (0, _emberMocha.it)('persists its content in the store', function (done) {\n            store.trigger('sessionDataUpdated', { some: 'property', authenticated: { authenticator: 'authenticator' } });\n\n            _ember['default'].run.next(function () {\n              store.restore().then(function (properties) {\n\n                (0, _chai.expect)(properties).to.eql({ some: 'property', authenticated: { some: 'other property', authenticator: 'authenticator' } });\n                done();\n              });\n            });\n          });\n\n          (0, _mocha.describe)('when the session is already authenticated', function () {\n            (0, _mocha.beforeEach)(function () {\n              session.set('isAuthenticated', true);\n            });\n\n            (0, _emberMocha.it)('does not trigger the \"authenticationSucceeded\" event', function (done) {\n              var triggered = false;\n              session.one('authenticationSucceeded', function () {\n                return triggered = true;\n              });\n              store.trigger('sessionDataUpdated', { some: 'other property', authenticated: { authenticator: 'authenticator' } });\n\n              _ember['default'].run.next(function () {\n                (0, _chai.expect)(triggered).to.be['false'];\n                done();\n              });\n            });\n          });\n\n          (0, _mocha.describe)('when the session is not already authenticated', function () {\n            (0, _mocha.beforeEach)(function () {\n              session.set('isAuthenticated', false);\n            });\n\n            (0, _emberMocha.it)('triggers the \"authenticationSucceeded\" event', function (done) {\n              var triggered = false;\n              session.one('authenticationSucceeded', function () {\n                return triggered = true;\n              });\n              store.trigger('sessionDataUpdated', { some: 'other property', authenticated: { authenticator: 'authenticator' } });\n\n              _ember['default'].run.next(function () {\n                (0, _chai.expect)(triggered).to.be['true'];\n                done();\n              });\n            });\n          });\n        });\n\n        (0, _mocha.describe)('when the authenticator rejects restoration', function () {\n          (0, _mocha.beforeEach)(function () {\n            _sinon['default'].stub(authenticator, 'restore').returns(_ember['default'].RSVP.reject());\n          });\n\n          (0, _emberMocha.it)('is not authenticated', function (done) {\n            store.trigger('sessionDataUpdated', { some: 'other property', authenticated: { authenticator: 'authenticator' } });\n\n            _ember['default'].run.next(function () {\n              (0, _chai.expect)(session.get('isAuthenticated')).to.be['false'];\n              done();\n            });\n          });\n\n          (0, _emberMocha.it)('clears its authenticated section', function (done) {\n            session.set('content', { some: 'property', authenticated: { some: 'other property' } });\n            store.trigger('sessionDataUpdated', { some: 'other property', authenticated: { authenticator: 'authenticator' } });\n\n            _ember['default'].run.next(function () {\n              (0, _chai.expect)(session.get('content')).to.eql({ some: 'other property', authenticated: {} });\n              done();\n            });\n          });\n\n          (0, _emberMocha.it)('updates the store', function (done) {\n            session.set('content', { some: 'property', authenticated: { some: 'other property' } });\n            store.trigger('sessionDataUpdated', { some: 'other property', authenticated: { authenticator: 'authenticator' } });\n\n            _ember['default'].run.next(function () {\n              store.restore().then(function (properties) {\n                (0, _chai.expect)(properties).to.eql({ some: 'other property', authenticated: {} });\n                done();\n              });\n            });\n          });\n\n          (0, _mocha.describe)('when the session is authenticated', function () {\n            (0, _mocha.beforeEach)(function () {\n              session.set('isAuthenticated', true);\n            });\n\n            (0, _emberMocha.it)('triggers the \"invalidationSucceeded\" event', function (done) {\n              var triggered = false;\n              session.one('invalidationSucceeded', function () {\n                return triggered = true;\n              });\n              store.trigger('sessionDataUpdated', { some: 'other property', authenticated: { authenticator: 'authenticator' } });\n\n              _ember['default'].run.next(function () {\n                (0, _chai.expect)(triggered).to.be['true'];\n                done();\n              });\n            });\n          });\n\n          (0, _mocha.describe)('when the session is not authenticated', function () {\n            (0, _mocha.beforeEach)(function () {\n              session.set('isAuthenticated', false);\n            });\n\n            (0, _emberMocha.it)('does not trigger the \"invalidationSucceeded\" event', function (done) {\n              var triggered = false;\n              session.one('invalidationSucceeded', function () {\n                return triggered = true;\n              });\n              store.trigger('sessionDataUpdated', { some: 'other property', authenticated: { authenticator: 'authenticator' } });\n\n              _ember['default'].run.next(function () {\n                (0, _chai.expect)(triggered).to.be['false'];\n                done();\n              });\n            });\n          });\n        });\n      });\n\n      (0, _mocha.describe)('when there is no authenticator factory in the store', function () {\n        (0, _emberMocha.it)('is not authenticated', function (done) {\n          store.trigger('sessionDataUpdated', { some: 'other property' });\n\n          _ember['default'].run.next(function () {\n            (0, _chai.expect)(session.get('isAuthenticated')).to.be['false'];\n            done();\n          });\n        });\n\n        (0, _emberMocha.it)('clears its authenticated section', function (done) {\n          session.set('content', { some: 'property', authenticated: { some: 'other property' } });\n          store.trigger('sessionDataUpdated', { some: 'other property' });\n\n          _ember['default'].run.next(function () {\n            (0, _chai.expect)(session.get('content')).to.eql({ some: 'other property', authenticated: {} });\n            done();\n          });\n        });\n\n        (0, _emberMocha.it)('updates the store', function (done) {\n          session.set('content', { some: 'property', authenticated: { some: 'other property' } });\n          store.trigger('sessionDataUpdated', { some: 'other property' });\n\n          _ember['default'].run.next(function () {\n            store.restore().then(function (properties) {\n              (0, _chai.expect)(properties).to.eql({ some: 'other property', authenticated: {} });\n              done();\n            });\n          });\n        });\n\n        (0, _mocha.describe)('when the session is authenticated', function () {\n          (0, _mocha.beforeEach)(function () {\n            session.set('isAuthenticated', true);\n          });\n\n          (0, _emberMocha.it)('triggers the \"invalidationSucceeded\" event', function (done) {\n            var triggered = false;\n            session.one('invalidationSucceeded', function () {\n              return triggered = true;\n            });\n            store.trigger('sessionDataUpdated', { some: 'other property' });\n\n            _ember['default'].run.next(function () {\n              (0, _chai.expect)(triggered).to.be['true'];\n              done();\n            });\n          });\n        });\n\n        (0, _mocha.describe)('when the session is not authenticated', function () {\n          (0, _mocha.beforeEach)(function () {\n            session.set('isAuthenticated', false);\n          });\n\n          (0, _emberMocha.it)('does not trigger the \"invalidationSucceeded\" event', function (done) {\n            var triggered = false;\n            session.one('invalidationSucceeded', function () {\n              return triggered = true;\n            });\n            store.trigger('sessionDataUpdated', { some: 'other property' });\n\n            _ember['default'].run.next(function () {\n              (0, _chai.expect)(triggered).to.be['false'];\n              done();\n            });\n          });\n        });\n      });\n    });\n\n    (0, _emberMocha.it)('does not share the content object between multiple instances', function () {\n      var session2 = _emberSimpleAuthInternalSession['default'].create({ store: store, container: container });\n\n      (0, _chai.expect)(session2.get('content')).to.not.equal(session.get('content'));\n    });\n  });\n});\n/* jshint expr:true */","define('dummy/tests/unit/internal-session-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/internal-session-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/internal-session-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/internal-session-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/internal-session-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/internal-session-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/mixins/application-route-mixin-test', ['exports', 'ember', 'ember-mocha', 'mocha', 'chai', 'sinon', 'ember-simple-auth/mixins/application-route-mixin', 'ember-simple-auth/internal-session', 'ember-simple-auth/session-stores/ephemeral', 'ember-simple-auth/configuration'], function (exports, _ember, _emberMocha, _mocha, _chai, _sinon, _emberSimpleAuthMixinsApplicationRouteMixin, _emberSimpleAuthInternalSession, _emberSimpleAuthSessionStoresEphemeral, _emberSimpleAuthConfiguration) {\n\n  (0, _mocha.describe)('ApplicationRouteMixin', function () {\n    var session = undefined;\n    var route = undefined;\n\n    (0, _mocha.beforeEach)(function () {\n      session = _emberSimpleAuthInternalSession['default'].create({ store: _emberSimpleAuthSessionStoresEphemeral['default'].create() });\n\n      route = _ember['default'].Route.extend(_emberSimpleAuthMixinsApplicationRouteMixin['default'], {\n        transitionTo: function transitionTo() {}\n      }).create({\n        session: session\n      });\n    });\n\n    (0, _mocha.describe)('mapping of service events to route methods', function () {\n      (0, _mocha.beforeEach)(function () {\n        _sinon['default'].spy(route, 'sessionAuthenticated');\n        _sinon['default'].spy(route, 'sessionInvalidated');\n      });\n\n      (0, _emberMocha.it)(\"maps the services's 'authenticationSucceeded' event into a method call\", function (done) {\n        session.trigger('authenticationSucceeded');\n\n        _ember['default'].run.next(function () {\n          (0, _chai.expect)(route.sessionAuthenticated).to.have.been.calledOnce;\n          done();\n        });\n      });\n\n      (0, _emberMocha.it)(\"maps the services's 'invalidationSucceeded' event into a method call\", function (done) {\n        session.trigger('invalidationSucceeded');\n\n        _ember['default'].run.next(function () {\n          (0, _chai.expect)(route.sessionInvalidated).to.have.been.calledOnce;\n          done();\n        });\n      });\n\n      (0, _emberMocha.it)('does not attach the event listeners twice', function (done) {\n        route.beforeModel();\n        session.trigger('authenticationSucceeded');\n\n        _ember['default'].run.next(function () {\n          (0, _chai.expect)(route.sessionAuthenticated).to.have.been.calledOnce;\n          done();\n        });\n      });\n    });\n\n    (0, _mocha.describe)('sessionAuthenticated', function () {\n      (0, _mocha.beforeEach)(function () {\n        _sinon['default'].spy(route, 'transitionTo');\n      });\n\n      (0, _mocha.describe)('when an attempted transition is stored in the session', function () {\n        var attemptedTransition = undefined;\n\n        (0, _mocha.beforeEach)(function () {\n          attemptedTransition = {\n            retry: function retry() {}\n          };\n          session.set('attemptedTransition', attemptedTransition);\n        });\n\n        (0, _emberMocha.it)('retries that transition', function () {\n          _sinon['default'].spy(attemptedTransition, 'retry');\n          route.sessionAuthenticated();\n\n          (0, _chai.expect)(attemptedTransition.retry).to.have.been.calledOnce;\n        });\n\n        (0, _emberMocha.it)('removes it from the session', function () {\n          route.sessionAuthenticated();\n\n          (0, _chai.expect)(session.get('attemptedTransition')).to.be['null'];\n        });\n      });\n\n      (0, _mocha.describe)('when no attempted transition is stored in the session', function () {\n        (0, _emberMocha.it)('transitions to \"Configuration.routeAfterAuthentication\"', function () {\n          route.sessionAuthenticated();\n\n          (0, _chai.expect)(route.transitionTo).to.have.been.calledWith(_emberSimpleAuthConfiguration['default'].routeAfterAuthentication);\n        });\n      });\n    });\n  });\n});\n/* jshint expr:true */","define('dummy/tests/unit/mixins/application-route-mixin-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/mixins/application-route-mixin-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/mixins/application-route-mixin-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/mixins/application-route-mixin-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/mixins/application-route-mixin-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/mixins/application-route-mixin-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/mixins/authenticated-route-mixin-test', ['exports', 'ember', 'ember-mocha', 'mocha', 'chai', 'sinon', 'ember-simple-auth/mixins/authenticated-route-mixin', 'ember-simple-auth/internal-session', 'ember-simple-auth/configuration', 'ember-simple-auth/session-stores/ephemeral'], function (exports, _ember, _emberMocha, _mocha, _chai, _sinon, _emberSimpleAuthMixinsAuthenticatedRouteMixin, _emberSimpleAuthInternalSession, _emberSimpleAuthConfiguration, _emberSimpleAuthSessionStoresEphemeral) {\n\n  (0, _mocha.describe)('AuthenticatedRouteMixin', function () {\n    var route = undefined;\n    var session = undefined;\n    var transition = undefined;\n\n    (0, _mocha.describe)('#beforeModel', function () {\n      (0, _mocha.beforeEach)(function () {\n        var MixinImplementingBeforeModel = _ember['default'].Mixin.create({\n          beforeModel: function beforeModel() {\n            return _ember['default'].RSVP.resolve('upstreamReturnValue');\n          }\n        });\n        var Route = _ember['default'].Route.extend(MixinImplementingBeforeModel, _emberSimpleAuthMixinsAuthenticatedRouteMixin['default'], {\n          // replace actual transitionTo as the router isn't set up etc.\n          transitionTo: function transitionTo() {}\n        });\n\n        session = _emberSimpleAuthInternalSession['default'].create({ store: _emberSimpleAuthSessionStoresEphemeral['default'].create() });\n        transition = {\n          abort: function abort() {},\n          send: function send() {}\n        };\n\n        route = Route.create({ session: session });\n        _sinon['default'].spy(transition, 'abort');\n        _sinon['default'].spy(transition, 'send');\n        _sinon['default'].spy(route, 'transitionTo');\n      });\n\n      (0, _mocha.describe)('if the session is authenticated', function () {\n        (0, _mocha.beforeEach)(function () {\n          session.set('isAuthenticated', true);\n        });\n\n        (0, _emberMocha.it)('returns the upstream promise', function () {\n          return route.beforeModel(transition).then(function (result) {\n            (0, _chai.expect)(result).to.equal('upstreamReturnValue');\n          });\n        });\n\n        (0, _emberMocha.it)('does not abort the transition', function () {\n          route.beforeModel(transition);\n\n          (0, _chai.expect)(transition.abort).to.not.have.been.called;\n        });\n\n        (0, _emberMocha.it)('does not transition to the authentication route', function () {\n          route.beforeModel(transition);\n\n          (0, _chai.expect)(route.transitionTo).to.not.have.been.calledWith(_emberSimpleAuthConfiguration['default'].authenticationRoute);\n        });\n      });\n\n      (0, _mocha.describe)('if the session is not authenticated', function () {\n        (0, _emberMocha.it)('does not return the upstream promise', function () {\n          (0, _chai.expect)(route.beforeModel(transition)).to.be.undefined;\n        });\n\n        (0, _emberMocha.it)('aborts the transition', function () {\n          route.beforeModel(transition);\n\n          (0, _chai.expect)(transition.abort).to.have.been.called;\n        });\n\n        (0, _emberMocha.it)('transitions to the authentication route', function () {\n          route.beforeModel(transition);\n\n          (0, _chai.expect)(route.transitionTo).to.have.been.calledWith(_emberSimpleAuthConfiguration['default'].authenticationRoute);\n        });\n      });\n    });\n  });\n});\n/* jshint expr:true */","define('dummy/tests/unit/mixins/authenticated-route-mixin-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/mixins/authenticated-route-mixin-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/mixins/authenticated-route-mixin-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/mixins/authenticated-route-mixin-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/mixins/authenticated-route-mixin-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/mixins/authenticated-route-mixin-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/mixins/data-adapter-mixin-test', ['exports', 'ember', 'ember-mocha', 'mocha', 'chai', 'sinon', 'ember-simple-auth/mixins/data-adapter-mixin'], function (exports, _ember, _emberMocha, _mocha, _chai, _sinon, _emberSimpleAuthMixinsDataAdapterMixin) {\n\n  (0, _mocha.describe)('DataAdapterMixin', function () {\n    var adapter = undefined;\n    var sessionService = undefined;\n    var hash = undefined;\n\n    (0, _mocha.beforeEach)(function () {\n      hash = {};\n      sessionService = _ember['default'].Object.create({\n        authorize: function authorize() {},\n        invalidate: function invalidate() {}\n      });\n\n      var BaseAdapter = _ember['default'].Object.extend({\n        ajaxOptions: function ajaxOptions() {\n          return hash;\n        },\n        handleResponse: function handleResponse() {\n          return '_super return value';\n        }\n      });\n      var Adapter = BaseAdapter.extend(_emberSimpleAuthMixinsDataAdapterMixin['default'], {\n        authorizer: 'authorizer:some'\n      });\n      adapter = Adapter.create({ session: sessionService });\n    });\n\n    (0, _mocha.describe)('#ajaxOptions', function () {\n      (0, _emberMocha.it)('registers a beforeSend hook', function () {\n        adapter.ajaxOptions();\n\n        (0, _chai.expect)(hash).to.have.ownProperty('beforeSend');\n      });\n\n      (0, _emberMocha.it)('asserts the presence of authorizer', function () {\n        adapter.set('authorizer', null);\n        (0, _chai.expect)(function () {\n          adapter.ajaxOptions();\n        }).to['throw'](/Assertion Failed/);\n      });\n\n      (0, _emberMocha.it)('preserves an existing beforeSend hook', function () {\n        var existingBeforeSend = _sinon['default'].spy();\n        hash.beforeSend = existingBeforeSend;\n        adapter.ajaxOptions();\n        hash.beforeSend();\n\n        (0, _chai.expect)(existingBeforeSend).to.have.been.called;\n      });\n\n      (0, _emberMocha.it)('authorizes with the given authorizer', function () {\n        _sinon['default'].spy(sessionService, 'authorize');\n        adapter.ajaxOptions();\n        hash.beforeSend();\n\n        (0, _chai.expect)(sessionService.authorize).to.have.been.calledWith('authorizer:some');\n      });\n\n      (0, _mocha.describe)('the beforeSend hook', function () {\n        var xhr = undefined;\n\n        (0, _mocha.beforeEach)(function () {\n          adapter.ajaxOptions();\n          xhr = {\n            setRequestHeader: function setRequestHeader() {}\n          };\n          _sinon['default'].spy(xhr, 'setRequestHeader');\n        });\n\n        (0, _mocha.describe)('when the authorizer calls the block', function () {\n          (0, _mocha.beforeEach)(function () {\n            _sinon['default'].stub(sessionService, 'authorize', function (authorizer, block) {\n              block('header', 'value');\n            });\n            hash.beforeSend(xhr);\n          });\n\n          (0, _emberMocha.it)('adds a request header as given by the authorizer', function () {\n            (0, _chai.expect)(xhr.setRequestHeader).to.have.been.calledWith('header', 'value');\n          });\n        });\n\n        (0, _mocha.describe)('when the authorizer does not call the block', function () {\n          (0, _mocha.beforeEach)(function () {\n            _sinon['default'].stub(sessionService, 'authorize');\n            hash.beforeSend(xhr);\n          });\n\n          (0, _emberMocha.it)('does not add a request header', function () {\n            (0, _chai.expect)(xhr.setRequestHeader).to.not.have.been.called;\n          });\n        });\n      });\n    });\n\n    (0, _mocha.describe)('#handleResponse', function () {\n      (0, _mocha.beforeEach)(function () {\n        _sinon['default'].spy(sessionService, 'invalidate');\n      });\n\n      (0, _mocha.describe)('when the response status is 401', function () {\n        (0, _mocha.describe)('when the session is authenticated', function () {\n          (0, _mocha.beforeEach)(function () {\n            sessionService.set('isAuthenticated', true);\n          });\n\n          (0, _emberMocha.it)('invalidates the session', function () {\n            adapter.handleResponse(401);\n\n            (0, _chai.expect)(sessionService.invalidate).to.have.been.calledOnce;\n          });\n        });\n\n        (0, _mocha.describe)('when the session is not authenticated', function () {\n          (0, _mocha.beforeEach)(function () {\n            sessionService.set('isAuthenticated', false);\n          });\n\n          (0, _emberMocha.it)('does not invalidate the session', function () {\n            adapter.handleResponse(401);\n\n            (0, _chai.expect)(sessionService.invalidate).to.not.have.been.called;\n          });\n        });\n      });\n\n      (0, _mocha.describe)('when the response status is not 401', function () {\n        (0, _emberMocha.it)('does not invalidate the session', function () {\n          adapter.handleResponse(200);\n\n          (0, _chai.expect)(sessionService.invalidate).to.not.have.been.called;\n        });\n      });\n\n      (0, _emberMocha.it)(\"returns _super's return value\", function () {\n        (0, _chai.expect)(adapter.handleResponse(401)).to.eq('_super return value');\n      });\n    });\n  });\n});\n/* jshint expr:true */","define('dummy/tests/unit/mixins/data-adapter-mixin-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/mixins/data-adapter-mixin-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/mixins/data-adapter-mixin-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/mixins/data-adapter-mixin-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/mixins/data-adapter-mixin-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/mixins/data-adapter-mixin-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/mixins/unauthenticated-route-mixin-test', ['exports', 'ember', 'ember-mocha', 'mocha', 'chai', 'sinon', 'ember-simple-auth/mixins/unauthenticated-route-mixin', 'ember-simple-auth/internal-session', 'ember-simple-auth/configuration', 'ember-simple-auth/session-stores/ephemeral'], function (exports, _ember, _emberMocha, _mocha, _chai, _sinon, _emberSimpleAuthMixinsUnauthenticatedRouteMixin, _emberSimpleAuthInternalSession, _emberSimpleAuthConfiguration, _emberSimpleAuthSessionStoresEphemeral) {\n\n  (0, _mocha.describe)('UnauthenticatedRouteMixin', function () {\n    var route = undefined;\n    var session = undefined;\n    var transition = undefined;\n\n    (0, _mocha.describe)('#beforeModel', function () {\n      (0, _mocha.beforeEach)(function () {\n        var MixinImplementingBeforeModel = _ember['default'].Mixin.create({\n          beforeModel: function beforeModel() {\n            return _ember['default'].RSVP.resolve('upstreamReturnValue');\n          }\n        });\n        var Route = _ember['default'].Route.extend(MixinImplementingBeforeModel, _emberSimpleAuthMixinsUnauthenticatedRouteMixin['default'], {\n          // replace actual transitionTo as the router isn't set up etc.\n          transitionTo: function transitionTo() {}\n        });\n\n        session = _emberSimpleAuthInternalSession['default'].create({ store: _emberSimpleAuthSessionStoresEphemeral['default'].create() });\n        transition = {\n          abort: function abort() {},\n          send: function send() {}\n        };\n\n        route = Route.create({ session: session });\n        _sinon['default'].spy(transition, 'abort');\n        _sinon['default'].spy(route, 'transitionTo');\n      });\n\n      (0, _mocha.describe)('if the session is authenticated', function () {\n        (0, _mocha.beforeEach)(function () {\n          session.set('isAuthenticated', true);\n        });\n\n        (0, _emberMocha.it)('aborts the transition', function () {\n          route.beforeModel(transition);\n\n          (0, _chai.expect)(transition.abort).to.have.been.called;\n        });\n\n        (0, _emberMocha.it)('transitions to routeIfAlreadyAuthenticated', function () {\n          route.beforeModel(transition);\n\n          (0, _chai.expect)(route.transitionTo).to.have.been.calledWith(_emberSimpleAuthConfiguration['default'].routeIfAlreadyAuthenticated);\n        });\n\n        (0, _emberMocha.it)('does not return the upstream promise', function () {\n          (0, _chai.expect)(route.beforeModel(transition)).to.be.undefined;\n        });\n      });\n\n      (0, _mocha.describe)('if the session is not authenticated', function () {\n        (0, _emberMocha.it)('does not abort the transition', function () {\n          route.beforeModel(transition);\n\n          (0, _chai.expect)(transition.abort).to.not.have.been.called;\n        });\n\n        (0, _emberMocha.it)('does not call route transitionTo', function () {\n          route.beforeModel(transition);\n\n          (0, _chai.expect)(route.transitionTo).to.not.have.been.called;\n        });\n\n        (0, _emberMocha.it)('returns the upstream promise', function () {\n          return route.beforeModel(transition).then(function (result) {\n            (0, _chai.expect)(result).to.equal('upstreamReturnValue');\n          });\n        });\n      });\n    });\n  });\n});\n/* jshint expr:true */","define('dummy/tests/unit/mixins/unauthenticated-route-mixin-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/mixins/unauthenticated-route-mixin-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/mixins/unauthenticated-route-mixin-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/mixins/unauthenticated-route-mixin-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/mixins/unauthenticated-route-mixin-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/mixins/unauthenticated-route-mixin-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/routes/application-test', ['exports', 'chai', 'ember-mocha'], function (exports, _chai, _emberMocha) {\n\n  (0, _emberMocha.describeModule)('route:application', 'ApplicationRoute', {\n    needs: ['service:session', 'router:main']\n  }, function () {\n    (0, _emberMocha.it)('is still testable when using the ApplicationRouteMixin', function () {\n      var route = this.subject();\n\n      (0, _chai.expect)(route).to.be.ok;\n    });\n  });\n});\n/* jshint expr:true */","define('dummy/tests/unit/routes/application-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/routes/application-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/routes/application-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/routes/application-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/routes/application-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/routes/application-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/routes/login-test', ['exports', 'chai', 'ember-mocha'], function (exports, _chai, _emberMocha) {\n\n  (0, _emberMocha.describeModule)('route:login', 'LoginRoute', {\n    needs: ['router:main']\n  }, function () {\n    (0, _emberMocha.it)('is still testable when using the UnauthenticatedRouteMixin', function () {\n      var route = this.subject();\n\n      (0, _chai.expect)(route).to.be.ok;\n    });\n  });\n});\n/* jshint expr:true */","define('dummy/tests/unit/routes/login-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/routes/login-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/routes/login-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/routes/login-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/routes/login-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/routes/login-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/routes/protected-test', ['exports', 'chai', 'ember-mocha'], function (exports, _chai, _emberMocha) {\n\n  (0, _emberMocha.describeModule)('route:protected', 'ProtectedRoute', {\n    needs: ['router:main']\n  }, function () {\n    (0, _emberMocha.it)('is still testable when using the AuthenticatedRouteMixin', function () {\n      var route = this.subject();\n\n      (0, _chai.expect)(route).to.be.ok;\n    });\n  });\n});\n/* jshint expr:true */","define('dummy/tests/unit/routes/protected-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/routes/protected-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/routes/protected-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/routes/protected-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/routes/protected-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/routes/protected-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/services/session-test', ['exports', 'ember', 'ember-mocha', 'mocha', 'chai', 'sinon', 'ember-simple-auth/services/session'], function (exports, _ember, _emberMocha, _mocha, _chai, _sinon, _emberSimpleAuthServicesSession) {\n\n  (0, _mocha.describe)('SessionService', function () {\n    var sessionService = undefined;\n    var session = undefined;\n    var authorizer = undefined;\n\n    (0, _mocha.beforeEach)(function () {\n      session = _ember['default'].ObjectProxy.extend(_ember['default'].Evented, {\n        content: {}\n      }).create();\n      authorizer = {\n        authorize: function authorize() {}\n      };\n      var container = { lookup: function lookup() {} };\n      _sinon['default'].stub(container, 'lookup').withArgs('authorizer').returns(authorizer);\n      sessionService = _emberSimpleAuthServicesSession['default'].create({ container: container, session: session });\n    });\n\n    (0, _emberMocha.it)('forwards the \"authenticationSucceeded\" event from the session', function (done) {\n      var triggered = false;\n      sessionService.one('authenticationSucceeded', function () {\n        return triggered = true;\n      });\n      session.trigger('authenticationSucceeded');\n\n      _ember['default'].run.next(function () {\n        (0, _chai.expect)(triggered).to.be['true'];\n        done();\n      });\n    });\n\n    (0, _emberMocha.it)('forwards the \"invalidationSucceeded\" event from the session', function (done) {\n      var triggered = false;\n      sessionService.one('invalidationSucceeded', function () {\n        return triggered = true;\n      });\n      session.trigger('invalidationSucceeded');\n\n      _ember['default'].run.next(function () {\n        (0, _chai.expect)(triggered).to.be['true'];\n        done();\n      });\n    });\n\n    (0, _mocha.describe)('isAuthenticated', function () {\n      (0, _emberMocha.it)('is read from the session', function () {\n        session.set('isAuthenticated', true);\n\n        (0, _chai.expect)(sessionService.get('isAuthenticated')).to.be['true'];\n      });\n\n      (0, _emberMocha.it)('is read-only', function () {\n        (0, _chai.expect)(function () {\n          sessionService.set('isAuthenticated', false);\n        }).to['throw'];\n      });\n    });\n\n    (0, _mocha.describe)('store', function () {\n      (0, _emberMocha.it)('is read from the session', function () {\n        session.set('store', 'some store');\n\n        (0, _chai.expect)(sessionService.get('store')).to.eq('some store');\n      });\n\n      (0, _emberMocha.it)('is read-only', function () {\n        (0, _chai.expect)(function () {\n          sessionService.set('store', 'some other store');\n        }).to['throw'];\n      });\n    });\n\n    (0, _mocha.describe)('attemptedTransition', function () {\n      (0, _emberMocha.it)('is read from the session', function () {\n        session.set('attemptedTransition', 'some transition');\n\n        (0, _chai.expect)(sessionService.get('attemptedTransition')).to.eq('some transition');\n      });\n\n      (0, _emberMocha.it)('is written back to the session', function () {\n        sessionService.set('attemptedTransition', 'some other transition');\n\n        (0, _chai.expect)(session.get('attemptedTransition')).to.eq('some other transition');\n      });\n    });\n\n    (0, _mocha.describe)('data', function () {\n      (0, _emberMocha.it)(\"is read from the session's content\", function () {\n        session.set('some', 'data');\n\n        (0, _chai.expect)(sessionService.get('data')).to.eql({ some: 'data' });\n      });\n\n      (0, _emberMocha.it)(\"is written back to the session's content\", function () {\n        sessionService.set('data.some', { other: 'data' });\n\n        (0, _chai.expect)(session.content).to.eql({ some: { other: 'data' } });\n      });\n\n      (0, _emberMocha.it)('is read-only', function () {\n        (0, _chai.expect)(function () {\n          sessionService.set('data', false);\n        }).to['throw'];\n      });\n    });\n\n    (0, _mocha.describe)('authenticate', function () {\n      (0, _mocha.beforeEach)(function () {\n        session.reopen({\n          authenticate: function authenticate() {\n            return 'value';\n          }\n        });\n      });\n\n      (0, _emberMocha.it)('authenticates the session', function () {\n        _sinon['default'].spy(session, 'authenticate');\n        sessionService.authenticate({ some: 'argument' });\n\n        (0, _chai.expect)(session.authenticate).to.have.been.calledWith({ some: 'argument' });\n      });\n\n      (0, _emberMocha.it)(\"returns the session's authentication return value\", function () {\n        (0, _chai.expect)(sessionService.authenticate()).to.eq('value');\n      });\n    });\n\n    (0, _mocha.describe)('invalidate', function () {\n      (0, _mocha.beforeEach)(function () {\n        session.reopen({\n          invalidate: function invalidate() {\n            return 'value';\n          }\n        });\n      });\n\n      (0, _emberMocha.it)('invalidates the session', function () {\n        _sinon['default'].spy(session, 'invalidate');\n        sessionService.invalidate({ some: 'argument' });\n\n        (0, _chai.expect)(session.invalidate).to.have.been.calledWith({ some: 'argument' });\n      });\n\n      (0, _emberMocha.it)(\"returns the session's invalidation return value\", function () {\n        (0, _chai.expect)(sessionService.invalidate()).to.eq('value');\n      });\n    });\n\n    (0, _mocha.describe)('authorize', function () {\n      (0, _mocha.describe)('when the session is authenticated', function () {\n        (0, _mocha.beforeEach)(function () {\n          sessionService.set('isAuthenticated', true);\n          sessionService.set('data', { authenticated: { some: 'data' } });\n        });\n\n        (0, _emberMocha.it)('authorizes with the authorizer', function () {\n          _sinon['default'].spy(authorizer, 'authorize');\n          sessionService.authorize('authorizer', 'block');\n\n          (0, _chai.expect)(authorizer.authorize).to.have.been.calledWith({ some: 'data' }, 'block');\n        });\n      });\n\n      (0, _mocha.describe)('when the session is not authenticated', function () {\n        (0, _mocha.beforeEach)(function () {\n          sessionService.set('isAuthenticated', false);\n        });\n\n        (0, _emberMocha.it)('does not authorize', function () {\n          _sinon['default'].spy(authorizer, 'authorize');\n          sessionService.authorize('authorizer', 'block');\n\n          (0, _chai.expect)(authorizer.authorize).to.not.have.been.called;\n        });\n      });\n    });\n  });\n});\n/* jshint expr:true */","define('dummy/tests/unit/services/session-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/services/session-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/services/session-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/services/session-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/services/session-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/services/session-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/session-stores/adaptive-test', ['exports', 'mocha', 'ember-simple-auth/session-stores/adaptive', 'dummy/tests/unit/session-stores/shared/store-behavior', 'dummy/tests/unit/session-stores/shared/cookie-store-behavior', 'dummy/tests/helpers/fake-cookie-service'], function (exports, _mocha, _emberSimpleAuthSessionStoresAdaptive, _dummyTestsUnitSessionStoresSharedStoreBehavior, _dummyTestsUnitSessionStoresSharedCookieStoreBehavior, _dummyTestsHelpersFakeCookieService) {\n\n  (0, _mocha.describe)('AdaptiveStore', function () {\n    var _store = undefined;\n\n    (0, _mocha.afterEach)(function () {\n      _store.clear();\n    });\n\n    (0, _mocha.describe)('when localStorage is available', function () {\n      (0, _mocha.beforeEach)(function () {\n        _store = _emberSimpleAuthSessionStoresAdaptive['default'].create({ _isLocalStorageAvailable: true });\n      });\n\n      (0, _dummyTestsUnitSessionStoresSharedStoreBehavior['default'])({\n        store: function store() {\n          return _store;\n        }\n      });\n    });\n\n    (0, _mocha.describe)('when localStorage is not available', function () {\n      (0, _mocha.beforeEach)(function () {\n        _store = _emberSimpleAuthSessionStoresAdaptive['default'].create({ _isLocalStorageAvailable: false });\n        _store.set('_store._cookies', _dummyTestsHelpersFakeCookieService['default'].create());\n        _store.set('_store._fastboot', { isFastBoot: false });\n      });\n\n      (0, _dummyTestsUnitSessionStoresSharedStoreBehavior['default'])({\n        store: function store() {\n          return _store;\n        }\n      });\n\n      (0, _dummyTestsUnitSessionStoresSharedCookieStoreBehavior['default'])({\n        createStore: function createStore(cookiesService) {\n          var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n          options._isLocalStorageAvailable = false;\n          var store = _emberSimpleAuthSessionStoresAdaptive['default'].create(options);\n          store.set('_store._cookies', cookiesService);\n          store.set('_store._fastboot', { isFastBoot: false });\n          return store;\n        },\n        renew: function renew(store, data) {\n          store.get('_store')._renew(data);\n        },\n        sync: function sync(store) {\n          store.get('_store')._syncData();\n        }\n      });\n    });\n  });\n});","define('dummy/tests/unit/session-stores/adaptive-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/session-stores/adaptive-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/session-stores/adaptive-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/session-stores/adaptive-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/session-stores/adaptive-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/session-stores/adaptive-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/session-stores/cookie-test', ['exports', 'mocha', 'ember-simple-auth/session-stores/cookie', 'dummy/tests/unit/session-stores/shared/store-behavior', 'dummy/tests/unit/session-stores/shared/cookie-store-behavior', 'dummy/tests/helpers/fake-cookie-service'], function (exports, _mocha, _emberSimpleAuthSessionStoresCookie, _dummyTestsUnitSessionStoresSharedStoreBehavior, _dummyTestsUnitSessionStoresSharedCookieStoreBehavior, _dummyTestsHelpersFakeCookieService) {\n\n  function createCookieStore(cookiesService) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    options._cookies = cookiesService;\n    options._fastboot = { isFastBoot: false };\n    return _emberSimpleAuthSessionStoresCookie['default'].create(options);\n  }\n\n  (0, _mocha.describe)('CookieStore', function () {\n    var _store = undefined;\n\n    (0, _mocha.beforeEach)(function () {\n      _store = createCookieStore(_dummyTestsHelpersFakeCookieService['default'].create());\n    });\n\n    (0, _mocha.afterEach)(function () {\n      _store.clear();\n    });\n\n    (0, _dummyTestsUnitSessionStoresSharedStoreBehavior['default'])({\n      store: function store() {\n        return _store;\n      },\n      syncExternalChanges: function syncExternalChanges() {\n        _store._syncData();\n      }\n    });\n\n    (0, _dummyTestsUnitSessionStoresSharedCookieStoreBehavior['default'])({\n      createStore: function createStore(cookiesService) {\n        var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n        return createCookieStore(cookiesService, options);\n      },\n      renew: function renew(store, data) {\n        return store._renew(data);\n      },\n      sync: function sync(store) {\n        store._syncData();\n      }\n    });\n  });\n});\n/* jshint expr:true */","define('dummy/tests/unit/session-stores/cookie-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/session-stores/cookie-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/session-stores/cookie-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/session-stores/cookie-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/session-stores/cookie-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/session-stores/cookie-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/session-stores/ephemeral-test', ['exports', 'mocha', 'ember-simple-auth/session-stores/ephemeral', 'dummy/tests/unit/session-stores/shared/store-behavior'], function (exports, _mocha, _emberSimpleAuthSessionStoresEphemeral, _dummyTestsUnitSessionStoresSharedStoreBehavior) {\n\n  (0, _mocha.describe)('EphemeralStore', function () {\n    var _store = undefined;\n\n    (0, _mocha.beforeEach)(function () {\n      _store = _emberSimpleAuthSessionStoresEphemeral['default'].create();\n    });\n\n    (0, _dummyTestsUnitSessionStoresSharedStoreBehavior['default'])({\n      store: function store() {\n        return _store;\n      }\n    });\n  });\n});","define('dummy/tests/unit/session-stores/ephemeral-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/session-stores/ephemeral-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/session-stores/ephemeral-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/session-stores/ephemeral-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/session-stores/ephemeral-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/session-stores/ephemeral-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/session-stores/local-storage-test', ['exports', 'mocha', 'ember-simple-auth/session-stores/local-storage', 'dummy/tests/unit/session-stores/shared/store-behavior'], function (exports, _mocha, _emberSimpleAuthSessionStoresLocalStorage, _dummyTestsUnitSessionStoresSharedStoreBehavior) {\n\n  (0, _mocha.describe)('LocalStorageStore', function () {\n    var _store = undefined;\n\n    (0, _mocha.beforeEach)(function () {\n      _store = _emberSimpleAuthSessionStoresLocalStorage['default'].create();\n    });\n\n    (0, _mocha.afterEach)(function () {\n      _store.clear();\n    });\n\n    (0, _dummyTestsUnitSessionStoresSharedStoreBehavior['default'])({\n      store: function store() {\n        return _store;\n      }\n    });\n  });\n});","define('dummy/tests/unit/session-stores/local-storage-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/session-stores/local-storage-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/session-stores/local-storage-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/session-stores/local-storage-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/session-stores/local-storage-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/session-stores/local-storage-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/session-stores/shared/cookie-store-behavior', ['exports', 'ember', 'ember-mocha', 'mocha', 'chai', 'sinon', 'dummy/tests/helpers/fake-cookie-service'], function (exports, _ember, _emberMocha, _mocha, _chai, _sinon, _dummyTestsHelpersFakeCookieService) {\n  exports['default'] = function (options) {\n    var store = undefined;\n    var createStore = undefined;\n    var renew = undefined;\n    var sync = undefined;\n    var cookieService = undefined;\n\n    (0, _mocha.beforeEach)(function () {\n      createStore = options.createStore;\n      renew = options.renew;\n      sync = options.sync;\n      cookieService = _dummyTestsHelpersFakeCookieService['default'].create();\n      _sinon['default'].spy(cookieService, 'read');\n      _sinon['default'].spy(cookieService, 'write');\n      store = createStore(cookieService);\n    });\n\n    (0, _mocha.afterEach)(function () {\n      cookieService.read.restore();\n      cookieService.write.restore();\n      store.clear();\n    });\n\n    (0, _mocha.describe)('#persist', function () {\n      (0, _emberMocha.it)('respects the configured cookieName', function () {\n        store = createStore(cookieService, { cookieName: 'test:session' });\n        store.persist({ key: 'value' });\n\n        (0, _chai.expect)(cookieService.write).to.have.been.calledWith('test:session', JSON.stringify({ key: 'value' }), { domain: null, expires: null, path: '/', secure: false });\n      });\n\n      (0, _emberMocha.it)('respects the configured cookieDomain', function () {\n        store = createStore(cookieService, { cookieDomain: 'example.com' });\n        store.persist({ key: 'value' });\n\n        (0, _chai.expect)(cookieService.write).to.have.been.calledWith('ember_simple_auth:session', JSON.stringify({ key: 'value' }), { domain: 'example.com', expires: null, path: '/', secure: false });\n      });\n    });\n\n    (0, _mocha.describe)('#renew', function () {\n      (0, _mocha.beforeEach)(function (done) {\n        store = createStore(cookieService, {\n          cookieName: 'test:session',\n          cookieExpirationTime: 60,\n          expires: new Date().getTime() + store.cookieExpirationTime * 1000\n        });\n        store.persist({ key: 'value' });\n        renew(store).then(done);\n      });\n\n      // TODO: the \"…:expiration_time\" never actually seems to get written\n      (0, _emberMocha.it)('stores the expiration time in a cookie named \"test:session:expiration_time\"');\n    });\n\n    (0, _mocha.describe)('the \"sessionDataUpdated\" event', function () {\n      var triggered = undefined;\n\n      (0, _mocha.beforeEach)(function () {\n        triggered = false;\n        store.persist({ key: 'value' });\n        store.one('sessionDataUpdated', function () {\n          triggered = true;\n        });\n      });\n\n      (0, _emberMocha.it)('is not triggered when the cookie has not actually changed', function (done) {\n        document.cookie = 'ember_simple_auth:session=%7B%22key%22%3A%22value%22%7D;path=/;';\n        sync(store);\n\n        _ember['default'].run.next(function () {\n          (0, _chai.expect)(triggered).to.be['false'];\n          done();\n        });\n      });\n\n      (0, _emberMocha.it)('is triggered when the cookie changed', function (done) {\n        var cookiesService = store.get('_cookies') || store.get('_store._cookies');\n        cookiesService._content['ember_simple_auth:session'] = '%7B%22key%22%3A%22other%20value%22%7D';\n        sync(store);\n\n        _ember['default'].run.next(function () {\n          _ember['default'].run.next(function () {\n            (0, _chai.expect)(triggered).to.be['true'];\n            done();\n          });\n        });\n      });\n\n      (0, _emberMocha.it)('is not triggered when the cookie expiration was renewed', function (done) {\n        renew(store, { key: 'value' });\n        sync(store);\n\n        _ember['default'].run.next(function () {\n          (0, _chai.expect)(triggered).to.be['false'];\n          done();\n        });\n      });\n    });\n  };\n});\n/* jshint expr:true */","define('dummy/tests/unit/session-stores/shared/cookie-store-behavior.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/session-stores/shared/cookie-store-behavior.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/session-stores/shared/cookie-store-behavior.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/session-stores/shared/cookie-store-behavior.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/session-stores/shared/cookie-store-behavior.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/session-stores/shared/cookie-store-behavior.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/session-stores/shared/store-behavior', ['exports', 'ember', 'ember-mocha', 'mocha', 'chai'], function (exports, _ember, _emberMocha, _mocha, _chai) {\n  exports['default'] = function (options) {\n    var syncExternalChanges = options.syncExternalChanges || _ember['default'].K;\n    var store = undefined;\n\n    (0, _mocha.beforeEach)(function () {\n      store = options.store();\n    });\n\n    (0, _mocha.describe)('#persist', function () {\n      (0, _emberMocha.it)('persists an object', function () {\n        return store.persist({ key: 'value' }).then(function () {\n          return store.restore().then(function (restoredContent) {\n            (0, _chai.expect)(restoredContent).to.eql({ key: 'value' });\n          });\n        });\n      });\n\n      (0, _emberMocha.it)('overrides existing data', function () {\n        return store.persist({ key1: 'value1' }).then(function () {\n          return store.persist({ key2: 'value2' }).then(function () {\n            return store.restore().then(function (restoredContent) {\n              (0, _chai.expect)(restoredContent).to.eql({ key2: 'value2' });\n            });\n          });\n        });\n      });\n\n      (0, _emberMocha.it)('does not trigger the \"sessionDataUpdated\" event', function (done) {\n        var triggered = false;\n        store.one('sessionDataUpdated', function () {\n          return triggered = true;\n        });\n        store.persist({ key: 'other value' });\n        syncExternalChanges();\n\n        _ember['default'].run.next(function () {\n          (0, _chai.expect)(triggered).to.be['false'];\n          done();\n        });\n      });\n    });\n\n    (0, _mocha.describe)('#restore', function () {\n      (0, _mocha.describe)('when the store is empty', function () {\n        (0, _emberMocha.it)('returns an empty object', function () {\n          return store.clear().then(function () {\n            return store.restore().then(function (restoredContent) {\n              (0, _chai.expect)(restoredContent).to.eql({});\n            });\n          });\n        });\n      });\n\n      (0, _mocha.describe)('when the store has data', function () {\n        (0, _mocha.beforeEach)(function () {\n          return store.persist({ key1: 'value1', key2: 'value2' });\n        });\n\n        (0, _emberMocha.it)('returns all data in the store', function () {\n          return store.restore().then(function (restoredContent) {\n            (0, _chai.expect)(restoredContent).to.eql({ key1: 'value1', key2: 'value2' });\n          });\n        });\n\n        (0, _emberMocha.it)('returns a copy of the stored data', function () {\n          return store.restore().then(function (data) {\n            data.key1 = 'another value!';\n\n            return store.restore().then(function (restoredContent) {\n              (0, _chai.expect)(restoredContent).to.eql({ key1: 'value1', key2: 'value2' });\n            });\n          });\n        });\n      });\n    });\n\n    (0, _mocha.describe)('#clear', function () {\n      (0, _emberMocha.it)('empties the store', function () {\n        return store.persist({ key1: 'value1', key2: 'value2' }).then(function () {\n          return store.clear().then(function () {\n            return store.restore().then(function (restoredContent) {\n              (0, _chai.expect)(restoredContent).to.eql({});\n            });\n          });\n        });\n      });\n    });\n  };\n});\n/* jshint expr:true */","define('dummy/tests/unit/session-stores/shared/store-behavior.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/session-stores/shared/store-behavior.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/session-stores/shared/store-behavior.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/session-stores/shared/store-behavior.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/session-stores/shared/store-behavior.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/session-stores/shared/store-behavior.js should pass jshint.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/utils/objects-are-equal-test', ['exports', 'ember-mocha', 'mocha', 'chai', 'ember-simple-auth/utils/objects-are-equal'], function (exports, _emberMocha, _mocha, _chai, _emberSimpleAuthUtilsObjectsAreEqual) {\n\n  (0, _mocha.describe)('objectsAreEqual', function () {\n    (0, _emberMocha.it)('is true for equal objects', function () {\n      (0, _chai.expect)((0, _emberSimpleAuthUtilsObjectsAreEqual['default'])({ a: 'b', c: 'd' }, { a: 'b', c: 'd' })).to.be['true'];\n    });\n\n    (0, _emberMocha.it)('is true for equal objects regardless of property order', function () {\n      (0, _chai.expect)((0, _emberSimpleAuthUtilsObjectsAreEqual['default'])({ a: 'b', c: 'd' }, { c: 'd', a: 'b' })).to.be['true'];\n    });\n\n    (0, _emberMocha.it)('is true for equal nested objects regardless of property order', function () {\n      (0, _chai.expect)((0, _emberSimpleAuthUtilsObjectsAreEqual['default'])({ a: 'b', c: 'd', e: { f: 'g' } }, { e: { f: 'g' }, a: 'b', c: 'd' })).to.be['true'];\n    });\n\n    (0, _emberMocha.it)('is true for equal objects that include arrays', function () {\n      (0, _chai.expect)((0, _emberSimpleAuthUtilsObjectsAreEqual['default'])({ a: ['b', 'c'] }, { a: ['b', 'c'] })).to.be['true'];\n    });\n\n    (0, _emberMocha.it)('is false for equal objects that include differently ordered arrays', function () {\n      (0, _chai.expect)((0, _emberSimpleAuthUtilsObjectsAreEqual['default'])({ a: ['b', 'c'] }, { a: ['c', 'b'] })).to.be['false'];\n    });\n\n    (0, _emberMocha.it)('is false for unequal objects', function () {\n      (0, _chai.expect)((0, _emberSimpleAuthUtilsObjectsAreEqual['default'])({ a: 'b' }, { c: 'd' })).to.be['false'];\n    });\n  });\n});\n/* jshint expr:true */","define('dummy/tests/unit/utils/objects-are-equal-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSCS - unit/utils/objects-are-equal-test.js', function () {\n    it('should pass jscs', function () {\n      expect(true, 'unit/utils/objects-are-equal-test.js should pass jscs.').to.be.ok;\n    });\n  });\n});","define('dummy/tests/unit/utils/objects-are-equal-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - unit/utils/objects-are-equal-test.js', function () {\n    it('should pass jshint', function () {\n      expect(true, 'unit/utils/objects-are-equal-test.js should pass jshint.').to.be.ok;\n    });\n  });\n});","/* jshint ignore:start */\n\nrequire('dummy/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9uzzlLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClpzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}